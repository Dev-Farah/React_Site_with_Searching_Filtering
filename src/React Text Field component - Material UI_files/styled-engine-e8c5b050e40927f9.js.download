(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[11165],{647050:function(e,n,s){"use strict";s.r(n),s.d(n,{default:function(){return c}});s(827378);var a,t=s(494616),o={en:{description:"Configuring your preferred styling library.",location:"/docs/data/material/guides/styled-engine/styled-engine.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1><code>@mui/styled-engine</code></h1><p class="description">Configuring your preferred styling library.</p>\n\n<p>The default style library used for generating CSS styles for MUI components is <a href="https://github.com/emotion-js/emotion">emotion</a>.\nAll of the MUI components rely on the <code>styled()</code> API to inject CSS into the page.\nThis API is supported by multiple popular styling libraries, which makes it possible to switch between them in MUI.</p>\n<h2 id="how-to-switch-to-styled-components">How to switch to styled-components<a aria-labelledby="how-to-switch-to-styled-components" class="anchor-link-style" href="#how-to-switch-to-styled-components" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><aside class="MuiCallout-root MuiCallout-error"><p>\u2757 <strong>Warning</strong>: Using <code>styled-components</code> as an engine at this moment is not working when used in a SSR projects. The reason is that the <code>babel-plugin-styled-components</code> is not picking up correctly the usages of the <code>styled()</code> utility inside the <code>@mui</code> packages. For more details, take a look at this <a href="https://github.com/mui/material-ui/issues/29742">issue</a>. We strongly recommend using <code>emotion</code> for SSR projects.</p>\n\n</aside><p>If you already have <a href="https://github.com/styled-components/styled-components">styled-components</a> installed, it&#39;s possible to use it exclusively.\nThere are currently two packages available to choose from:</p>\n<ul>\n<li><code>@mui/styled-engine</code> - a thin wrapper around <a href="https://emotion.sh/docs/styled">emotion&#39;s <code>styled()</code></a> API, with the addition of few other required utilities, such as the <code>&lt;GlobalStyles /&gt;</code> component, the <code>css</code> and <code>keyframe</code> helpers, etc. This is the default.</li>\n<li><code>@mui/styled-engine-sc</code> - a similar wrapper around <code>styled-components</code>.</li>\n</ul>\n<p>These two packages implement the same interface, which makes it possible to replace one with the other.\nBy default, <code>@mui/material</code> has <code>@mui/styled-engine</code> as a dependency, but you can configure your bundler to replace it with <code>@mui/styled-engine-sc</code>.</p>\n<h3 id="yarn">yarn<a aria-labelledby="yarn" class="anchor-link-style" href="#yarn" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>If you are using yarn, you can configure it using a package resolution:</p>\n<p><strong>package.json</strong></p>\n\x3c!-- #default-branch-switch --\x3e\n\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">{\n</span><span class="token prefix unchanged"> </span><span class="token line">  "dependencies": {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    "@mui/styled-engine": "latest"\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    "@mui/styled-engine": "npm:@mui/styled-engine-sc@latest"\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  },\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  "resolutions": {\n</span><span class="token prefix inserted">+</span><span class="token line">    "@mui/styled-engine": "npm:@mui/styled-engine-sc@latest"\n</span><span class="token prefix inserted">+</span><span class="token line">  },\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">}</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<h3 id="npm">npm<a aria-labelledby="npm" class="anchor-link-style" href="#npm" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>As package resolutions are not available in npm at this moment, you need to update you bundler&#39;s config to add this alias. Here is an example of how you can do it, if you use <code>webpack</code>:</p>\n<p><strong>webpack.config.js</strong></p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">module.exports = {\n</span><span class="token prefix unchanged"> </span><span class="token line">  //...\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  resolve: {\n</span><span class="token prefix inserted">+</span><span class="token line">    alias: {\n</span><span class="token prefix inserted">+</span><span class="token line">      \'@mui/styled-engine\': \'@mui/styled-engine-sc\'\n</span><span class="token prefix inserted">+</span><span class="token line">    },\n</span><span class="token prefix inserted">+</span><span class="token line">  },\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">};</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<p>If you are using TypeScript, you will need to also update the TSConfig.</p>\n<p><strong>tsconfig.json</strong></p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">{\n</span><span class="token prefix unchanged"> </span><span class="token line">  "compilerOptions": {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    "paths": {\n</span><span class="token prefix inserted">+</span><span class="token line">      "@mui/styled-engine": ["./node_modules/@mui/styled-engine-sc"]\n</span><span class="token prefix inserted">+</span><span class="token line">    }\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  },\n</span><span class="token prefix unchanged"> </span><span class="token line">}</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<h3 id="next-js">Next.js<a aria-labelledby="next-js" class="anchor-link-style" href="#next-js" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><strong>next.config.js</strong></p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const withTM = require(\'next-transpile-modules\')([\n</span><span class="token prefix inserted">+</span><span class="token line">  \'@mui/material\',\n</span><span class="token prefix inserted">+</span><span class="token line">  \'@mui/system\',\n</span><span class="token prefix inserted">+</span><span class="token line">  \'@mui/icons-material\', // If @mui/icons-material is being used\n</span><span class="token prefix inserted">+</span><span class="token line">]);\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">module.exports = withTM({\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">webpack: (config) => {\n</span><span class="token prefix unchanged"> </span><span class="token line">  config.resolve.alias = {\n</span><span class="token prefix unchanged"> </span><span class="token line">    ...config.resolve.alias,\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    \'@mui/styled-engine\': \'@mui/styled-engine-sc\',\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   };\n</span><span class="token prefix unchanged"> </span><span class="token line">   return config;\n</span><span class="token prefix unchanged"> </span><span class="token line"> }\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">});</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<h3 id="ready-to-use-examples">Ready-to-use examples<a aria-labelledby="ready-to-use-examples" class="anchor-link-style" href="#ready-to-use-examples" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>If you are using create-react-app, there is a ready-to-use template in the example projects.\nYou can use these <code>styled-component</code> examples as a reference:</p>\n\x3c!-- #default-branch-switch --\x3e\n\n<ul>\n<li><a href="https://github.com/mui/material-ui/tree/master/examples/create-react-app-with-styled-components">create-react-app</a></li>\n<li><a href="https://github.com/mui/material-ui/tree/master/examples/create-react-app-with-styled-components-typescript">create-react-app with TypeScript</a></li>\n<li><a href="https://github.com/mui/material-ui/tree/master/examples">and many others</a></li>\n</ul>\n<aside class="MuiCallout-root MuiCallout-warning"><p><strong>Note</strong>: <code>@emotion/react</code>, <code>@emotion/styled</code>, and <code>styled-components</code> are optional peer dependencies of <code>@mui/material</code>, so you need to install them yourself. See the <a href="/material-ui/getting-started/installation/">Installation guide</a> for more info.</p>\n\n</aside><p>This package-swap approach is identical to the replacement of React with <a href="https://github.com/preactjs/preact">Preact</a>. The Preact team has documented a large number of installation configurations. If you are stuck with MUI + styled-components, don&#39;t hesitate to check out how they solve the problem, as you can likely transfer the solution.</p>\n'],toc:[{text:"How to switch to styled-components",level:2,hash:"how-to-switch-to-styled-components",children:[{text:"yarn",level:3,hash:"yarn"},{text:"npm",level:3,hash:"npm"},{text:"Next.js",level:3,hash:"next-js"},{text:"Ready-to-use examples",level:3,hash:"ready-to-use-examples"}]}],title:"@mui/styled-engine",headers:{components:[]}},pt:{description:"Configuring your preferred styling library.",location:"/docs/data/material/guides/styled-engine/styled-engine-pt.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1><code>@material-ui/styled-engine</code></h1><p class="description">Configuring your preferred styling library.</p>\n\n<p>The default style library used for generating CSS styles for Material-UI components is <a href="https://github.com/emotion-js/emotion">emotion</a>. All of the Material-UI components rely on the <code>styled()</code> API to inject CSS into the page. This API is supported by multiple popular styling libraries, which makes it possible to switch between them in Material-UI.</p>\n<h2 id="how-to-switch-to-styled-components">How to switch to styled-components<a aria-labelledby="how-to-switch-to-styled-components" class="anchor-link-style" href="#how-to-switch-to-styled-components" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><aside class="MuiCallout-root MuiCallout-error"><p>\u2757 <strong>Warning</strong>: Using <code>styled-components</code> as an engine at this moment is not working when used in a SSR projects. The reason is that the <code>babel-plugin-styled-components</code> is not picking up correctly the usages of the <code>styled()</code> utility inside the <code>@mui</code> packages. For more details, take a look at this <a href="https://github.com/mui/material-ui/issues/29742">issue</a>. We strongly recommend using <code>emotion</code> for SSR projects.</p>\n\n</aside><p>If you already have <a href="https://github.com/styled-components/styled-components">styled-components</a> installed, it&#39;s possible to use it exclusively. There are currently two packages available to choose from:</p>\n<ul>\n<li><code>@material-ui/styled-engine</code> - a thin wrapper around <a href="https://emotion.sh/docs/styled">emotion&#39;s <code>styled()</code></a> API, with the addition of few other required utilities, such as the <code>&lt;GlobalStyles /&gt;</code> component, the <code>css</code> and <code>keyframe</code> helpers, etc. This is the default. This is the default.</li>\n<li><code>@material-ui/styled-engine-sc</code> - a similar wrapper around <code>styled-components</code>.</li>\n</ul>\n<p>These two packages implement the same interface, which makes it possible to replace one with the other. By default, <code>@mui/material</code> has <code>@mui/styled-engine</code> as a dependency, but you can configure your bundler to replace it with <code>@mui/styled-engine-sc</code>.</p>\n<h3 id="yarn">yarn<a aria-labelledby="yarn" class="anchor-link-style" href="#yarn" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>If you are using yarn, you can configure it using a package resolution:</p>\n<p><strong>package.json</strong></p>\n\x3c!-- #default-branch-switch --\x3e\n\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">{\n</span><span class="token prefix unchanged"> </span><span class="token line">  "dependencies": {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    "@mui/styled-engine": "latest"\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    "@mui/styled-engine": "npm:@mui/styled-engine-sc@latest"\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  },\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  "resolutions": {\n</span><span class="token prefix inserted">+</span><span class="token line">    "@mui/styled-engine": "npm:@mui/styled-engine-sc@latest"\n</span><span class="token prefix inserted">+</span><span class="token line">  },\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">}</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<h3 id="npm">npm<a aria-labelledby="npm" class="anchor-link-style" href="#npm" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>As package resolutions are not available in npm at this moment, you need to update you bundler&#39;s config to add this alias. Here is an example of how you can do it, if you use <code>webpack</code>:</p>\n<p><strong>webpack.alias.js</strong></p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">module.exports = {\n</span><span class="token prefix unchanged"> </span><span class="token line">  //...\n</span></span>module.exports = {\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> //...\n</span></span>resolve: {\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   alias: {\n</span><span class="token prefix unchanged"> </span><span class="token line">     \'@material-ui/styled-engine\': \'@material-ui/styled-engine-sc\',\n</span><span class="token prefix unchanged"> </span><span class="token line">   },\n</span><span class="token prefix unchanged"> </span><span class="token line"> },\n</span></span>};\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<p>If you are using TypeScript, you will need to also update the TSConfig.</p>\n<p><strong>tsconfig.json</strong></p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">{\n</span><span class="token prefix unchanged"> </span><span class="token line">  "compilerOptions": {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    "paths": {\n</span><span class="token prefix inserted">+</span><span class="token line">      "@mui/styled-engine": ["./node_modules/@mui/styled-engine-sc"]\n</span><span class="token prefix inserted">+</span><span class="token line">    }\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  },\n</span><span class="token prefix unchanged"> </span><span class="token line">}</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<h3 id="next-js">Next.js<a aria-labelledby="next-js" class="anchor-link-style" href="#next-js" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><strong>next.config.js</strong></p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const withTM = require(\'next-transpile-modules\')([\n</span><span class="token prefix inserted">+</span><span class="token line">  \'@mui/material\',\n</span><span class="token prefix inserted">+</span><span class="token line">  \'@mui/system\',\n</span><span class="token prefix inserted">+</span><span class="token line">  \'@mui/icons-material\', // If @mui/icons-material is being used\n</span><span class="token prefix inserted">+</span><span class="token line">]);\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">module.exports = withTM({\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">webpack: (config) => {\n</span><span class="token prefix unchanged"> </span><span class="token line">  config.resolve.alias = {\n</span><span class="token prefix unchanged"> </span><span class="token line">    ...config.resolve.alias,\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    \'@mui/styled-engine\': \'@mui/styled-engine-sc\',\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   };\n</span><span class="token prefix unchanged"> </span><span class="token line">   return config;\n</span><span class="token prefix unchanged"> </span><span class="token line"> }\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">});</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<h3 id="ready-to-use-examples">Ready-to-use examples<a aria-labelledby="ready-to-use-examples" class="anchor-link-style" href="#ready-to-use-examples" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>If you are using create-react-app, there is a ready-to-use template in the example projects. You can use these <code>styled-component</code> examples as a reference:</p>\n\x3c!-- #default-branch-switch --\x3e\n\n<ul>\n<li><a href="https://github.com/mui/material-ui/tree/master/examples/create-react-app-with-styled-components">create-react-app</a></li>\n<li><a href="https://github.com/mui/material-ui/tree/master/examples/create-react-app-with-styled-components-typescript">create-react-app with TypeScript</a></li>\n<li><a href="https://github.com/mui/material-ui/tree/master/examples">and many others</a></li>\n</ul>\n<aside class="MuiCallout-root MuiCallout-warning"><p><strong>Note</strong>: <code>@emotion/react</code>, <code>@emotion/styled</code>, and <code>styled-components</code> are optional peer dependencies of <code>@mui/material</code>, so you need to install them yourself. See the <a href="/pt/material-ui/getting-started/installation/">Installation guide</a> for more info.</p>\n\n</aside><p>This package-swap approach is identical to the replacement of React with <a href="https://github.com/preactjs/preact">Preact</a>. The Preact team has documented a large number of installation configurations. If you are stuck with MUI + styled-components, don&#39;t hesitate to check out how they solve the problem, as you can likely transfer the solution.</p>\n'],toc:[{text:"How to switch to styled-components",level:2,hash:"how-to-switch-to-styled-components",children:[{text:"yarn",level:3,hash:"yarn"},{text:"npm",level:3,hash:"npm"},{text:"Next.js",level:3,hash:"next-js"},{text:"Ready-to-use examples",level:3,hash:"ready-to-use-examples"}]}],title:"@material-ui/styled-engine",headers:{components:[]}},zh:{description:"\u914d\u7f6e\u60a8\u9996\u9009\u7684\u6837\u5f0f\u5e93\u3002",location:"/docs/data/material/guides/styled-engine/styled-engine-zh.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1><code>@mui/styled-engine</code></h1><p class="description">\u914d\u7f6e\u60a8\u9996\u9009\u7684\u6837\u5f0f\u5e93\u3002</p>\n\n<p><a href="https://github.com/emotion-js/emotion">emotion</a>\u662f MUI \u7ec4\u4ef6\u7528\u4e8e\u751f\u6210 CSS \u6837\u5f0f\u7684\u9ed8\u8ba4\u6837\u5f0f\u5e93\u3002 \u6240\u6709 MUI \u7ec4\u4ef6\u90fd\u4f9d\u9760 <code>styled()</code> API \u5c06 CSS \u6ce8\u5165\u5230\u9875\u9762\u3002 \u6b64 API \u5f97\u5230\u591a\u4e2a\u6d41\u884c\u5f0f\u6837\u5f0f\u5e93\u7684\u652f\u6301\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728 MUI \u4e2d\u5207\u6362\u5b83\u4eec\u3002</p>\n<h2 id="how-to-switch-to-styled-components">\u5982\u4f55\u5207\u6362\u5230 styled-components<a aria-labelledby="how-to-switch-to-styled-components" class="anchor-link-style" href="#how-to-switch-to-styled-components" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><aside class="MuiCallout-root MuiCallout-error"><p>\u2757 <strong>Warning</strong>: Using <code>styled-components</code> as an engine at this moment is not working when used in a SSR projects. The reason is that the <code>babel-plugin-styled-components</code> is not picking up correctly the usages of the <code>styled()</code> utility inside the <code>@mui</code> packages. For more details, take a look at this <a href="https://github.com/mui/material-ui/issues/29742">issue</a>. We strongly recommend using <code>emotion</code> for SSR projects.</p>\n\n</aside><p>If you already have <a href="https://github.com/styled-components/styled-components">styled-components</a> installed, it&#39;s possible to use it exclusively. There are currently two packages available to choose from:</p>\n<ul>\n<li><code>@mui/styled-engine</code> - \u4e00\u4e2a\u56f4\u7ed5 <a href="https://emotion.sh/docs/styled">emotion \u7684 <code>styled()</code></a> API\uff0c \u5305\u542b\u4e00\u4e9b\u6240\u9700\u7684\u65b9\u6cd5\uff0c \u4f8b\u5982 <code>&lt;GlobalStyles /&gt;</code> \u7ec4\u4ef6\uff0c <code>css</code> \u548c <code>keyframe</code> \u7b49\u3002 \u8fd9\u662f\u9ed8\u8ba4\u7684\u3002</li>\n<li><code>@mui/styled-engine-sc</code> - \u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u4e0a\u8005\u7684 <code>styled-components</code> \u5305\u88c5\u5e93\u3002</li>\n</ul>\n<p>These two packages implement the same interface, which makes it possible to replace one with the other. By default, <code>@mui/material</code> has <code>@mui/styled-engine</code> as a dependency, but you can configure your bundler to replace it with <code>@mui/styled-engine-sc</code>.</p>\n<h3 id="yarn">yarn<a aria-labelledby="yarn" class="anchor-link-style" href="#yarn" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>If you are using yarn, you can configure it using a package resolution:</p>\n<p><strong>package.json</strong></p>\n\x3c!-- #default-branch-switch --\x3e\n\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">module.exports = {\n</span><span class="token prefix unchanged"> </span><span class="token line"> //...\n</span><span class="token prefix unchanged"> </span><span class="token line"> resolve: {\n</span><span class="token prefix unchanged"> </span><span class="token line">   alias: {\n</span><span class="token prefix unchanged"> </span><span class="token line">     \'@mui/styled-engine\': \'@mui/styled-engine-sc\',\n</span><span class="token prefix unchanged"> </span><span class="token line">   },\n</span><span class="token prefix unchanged"> </span><span class="token line"> },\n</span></span>};\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<h3 id="npm">npm<a aria-labelledby="npm" class="anchor-link-style" href="#npm" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>As package resolutions are not available in npm at this moment, you need to update you bundler&#39;s config to add this alias. Here is an example of how you can do it, if you use <code>webpack</code>:</p>\n<p><strong>webpack.alias.js</strong></p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">module.exports = {\n</span><span class="token prefix unchanged"> </span><span class="token line">  //...\n</span></span>module.exports = {\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  //...\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  resolve: {\n</span><span class="token prefix inserted">+</span><span class="token line">    alias: {\n</span><span class="token prefix inserted">+</span><span class="token line">      \'@mui/styled-engine\': \'@mui/styled-engine-sc\'\n</span><span class="token prefix inserted">+</span><span class="token line">    },\n</span><span class="token prefix inserted">+</span><span class="token line">  },\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">};</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<p>If you are using TypeScript, you will need to also update the TSConfig.</p>\n<p><strong>tsconfig.json</strong></p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">{\n</span><span class="token prefix unchanged"> </span><span class="token line">  "compilerOptions": {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    "paths": {\n</span><span class="token prefix inserted">+</span><span class="token line">      "@mui/styled-engine": ["./node_modules/@mui/styled-engine-sc"]\n</span><span class="token prefix inserted">+</span><span class="token line">    }\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  },\n</span><span class="token prefix unchanged"> </span><span class="token line">}</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<h3 id="next-js">Next.js<a aria-labelledby="next-js" class="anchor-link-style" href="#next-js" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><strong>next.config.js</strong></p>\n<div class="MuiCode-root"><pre><code class="language-diff">These two packages implement the same interface, which makes it makes possible to replace one with the other. By default, &lt;code>@mui/core&lt;/code> has &lt;code>@mui/styled-engine&lt;/code> as a dependency, but you can configure your bundler to replace it with &lt;code>@mui/styled-engine-sc&lt;/code>. For example, if you are using webpack you can configure this by adding a resolver:\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<h3 id="ready-to-use-examples">Ready-to-use examples<a aria-labelledby="ready-to-use-examples" class="anchor-link-style" href="#ready-to-use-examples" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>If you are using create-react-app, there is a ready-to-use template in the example projects. You can use these <code>styled-component</code> examples as a reference:</p>\n\x3c!-- #default-branch-switch --\x3e\n\n<ul>\n<li><a href="https://github.com/mui/material-ui/tree/master/examples/create-react-app-with-styled-components">create-react-app</a></li>\n<li><a href="https://github.com/mui/material-ui/tree/master/examples/create-react-app-with-styled-components-typescript">\u4f7f\u7528 TypeScript \u6765 create-react-app</a></li>\n<li><a href="https://github.com/mui/material-ui/tree/master/examples">\u5176\u4ed6\u6a21\u677f</a></li>\n</ul>\n<aside class="MuiCallout-root MuiCallout-warning"><p><strong>Note</strong>: <code>@emotion/react</code>, <code>@emotion/styled</code>, and <code>styled-components</code> are optional peer dependencies of <code>@mui/material</code>, so you need to install them yourself. See the <a href="/zh/material-ui/getting-started/installation/">Installation guide</a> for more info.</p>\n\n</aside><p>This package-swap approach is identical to the replacement of React with <a href="https://github.com/preactjs/preact">Preact</a>. The Preact team has documented a large number of installation configurations. If you are stuck with MUI + styled-components, don&#39;t hesitate to check out how they solve the problem, as you can likely transfer the solution.</p>\n'],toc:[{text:"\u5982\u4f55\u5207\u6362\u5230 styled-components",level:2,hash:"how-to-switch-to-styled-components",children:[{text:"yarn",level:3,hash:"yarn"},{text:"npm",level:3,hash:"npm"},{text:"Next.js",level:3,hash:"next-js"},{text:"Ready-to-use examples",level:3,hash:"ready-to-use-examples"}]}],title:"@mui/styled-engine",headers:{components:[]}}},i={},p={},l=s(824246);function c(){return a||(a=(0,l.jsx)(t.Z,{demos:i,docs:o,demoComponents:p}))}},810593:function(e,n,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/guides/styled-engine",function(){return s(647050)}])}},function(e){e.O(0,[75760,31194,91642,35408,85992,51588,79125,93899,63978,54328,82744,20365,51990,37637,26035,8726,11486,10552,67414,47093,84445,77756,94616,49774,92888,40179],(function(){return n=810593,e(e.s=n);var n}));var n=e.O();_N_E=n}]);