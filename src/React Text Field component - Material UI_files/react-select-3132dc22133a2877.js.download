(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[37148],{135493:function(e,n,a){"use strict";a.r(n),a.d(n,{default:function(){return ia}});var t,l,s,o,i,r,c,p,u,m,d,h,v,g,b,k,f,x,y,I=a(827378),S=a(494616),C=a(25778),M=a(375205),T=a(617446),j=a(768913),Z=a(828996),w=a(449704),F=a(824246);var A,N,L,P,O,W,R,H,B,z,D,E,q,V,G,_,K,U,Y,$,X,J,Q,ee,ne=a(336146);var ae=a(295649),te=a(481936),le=a(138944),se=a(501330),oe=a(570875),ie=a(594218),re=a(760163),ce=a(318393),pe=a(683990),ue=a(906205),me=a(306672),de=["className","children","classes","IconComponent","input","inputProps","variant"],he=["root"],ve=(0,F.jsx)(pe.Z,{}),ge=I.forwardRef((function(e,n){var a=(0,ue.Z)({name:"MuiNativeSelect",props:e}),t=a.className,l=a.children,s=a.classes,o=void 0===s?{}:s,i=a.IconComponent,r=void 0===i?ce.Z:i,c=a.input,p=void 0===c?ve:c,u=a.inputProps,m=(a.variant,(0,te.Z)(a,de)),d=(0,re.Z)(),h=(0,ie.Z)({props:a,muiFormControl:d,states:["variant"]}),v=function(e){var n=e.classes;return(0,se.Z)({root:["root"]},me.f,n)}((0,ae.Z)((0,ae.Z)({},a),{},{classes:o})),g=(o.root,(0,te.Z)(o,he));return(0,F.jsx)(I.Fragment,{children:I.cloneElement(p,(0,ae.Z)((0,ae.Z)({inputComponent:oe.ZP,inputProps:(0,ae.Z)((0,ae.Z)({children:l,classes:g,IconComponent:r,variant:h.variant,type:void 0},u),p?p.props.inputProps:{}),ref:n},m),{},{className:(0,le.default)(v.root,p.props.className,t)}))})}));ge.muiName="Select";var be,ke,fe,xe,ye,Ie,Se,Ce,Me,Te,je,Ze,we,Fe,Ae,Ne=ge;var Le,Pe,Oe,We,Re,He,Be,ze,De,Ee,qe,Ve,Ge,_e,Ke,Ue,Ye,$e,Xe,Je=a(290763),Qe=a(380602),en=(0,Je.ZP)(Qe.ZP)((function(e){var n=e.theme;return{"label + &":{marginTop:n.spacing(3)},"& .MuiInputBase-input":{borderRadius:4,position:"relative",backgroundColor:n.palette.background.paper,border:"1px solid #ced4da",fontSize:16,padding:"10px 26px 10px 12px",transition:n.transitions.create(["border-color","box-shadow"]),fontFamily:["-apple-system","BlinkMacSystemFont",'"Segoe UI"',"Roboto",'"Helvetica Neue"',"Arial","sans-serif",'"Apple Color Emoji"','"Segoe UI Emoji"','"Segoe UI Symbol"'].join(","),"&:focus":{borderRadius:4,borderColor:"#80bdff",boxShadow:"0 0 0 0.2rem rgba(0,123,255,.25)"}}}}));var nn,an,tn=a(146010),ln=a(231548),sn={PaperProps:{style:{maxHeight:224,width:250}}},on=["Oliver Hansen","Van Henry","April Tucker","Ralph Hubbard","Omar Alexander","Carlos Abbott","Miriam Wagner","Bradley Wilkerson","Virginia Andrews","Kelly Snyder"];function rn(e,n,a){return{fontWeight:-1===n.indexOf(e)?a.typography.fontWeightRegular:a.typography.fontWeightMedium}}var cn,pn,un=a(205370),mn=a(486193),dn={PaperProps:{style:{maxHeight:224,width:250}}},hn=["Oliver Hansen","Van Henry","April Tucker","Ralph Hubbard","Omar Alexander","Carlos Abbott","Miriam Wagner","Bradley Wilkerson","Virginia Andrews","Kelly Snyder"];var vn,gn,bn=a(222849),kn={PaperProps:{style:{maxHeight:224,width:250}}},fn=["Oliver Hansen","Van Henry","April Tucker","Ralph Hubbard","Omar Alexander","Carlos Abbott","Miriam Wagner","Bradley Wilkerson","Virginia Andrews","Kelly Snyder"];function xn(e,n,a){return{fontWeight:-1===n.indexOf(e)?a.typography.fontWeightRegular:a.typography.fontWeightMedium}}var yn,In,Sn,Cn,Mn,Tn,jn=a(871649);var Zn=["Oliver Hansen","Van Henry","April Tucker","Ralph Hubbard","Omar Alexander","Carlos Abbott","Miriam Wagner","Bradley Wilkerson","Virginia Andrews","Kelly Snyder"];var wn,Fn,An,Nn,Ln=a(147646);var Pn,On,Wn,Rn,Hn,Bn,zn,Dn,En,qn,Vn,Gn,_n,Kn,Un,Yn,$n=a(478768),Xn=a(421408),Jn=a(584567),Qn=a(470126);var ea={PaperProps:{style:{maxHeight:224,width:250}}},na=["Oliver Hansen","Van Henry","April Tucker","Ralph Hubbard","Omar Alexander","Carlos Abbott","Miriam Wagner","Bradley Wilkerson","Virginia Andrews","Kelly Snyder"];function aa(e,n,a){return{fontWeight:-1===n.indexOf(e)?a.typography.fontWeightRegular:a.typography.fontWeightMedium}}var ta,la={en:{description:"Select components are used for collecting user provided information from a list of options.",location:"/docs/data/material/components/selects/selects.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Select</h1><p class="description">Select components are used for collecting user provided information from a list of options.</p>\n\n',{component:"modules/components/ComponentLinkHeader.js"},'<h2 id="basic-select">Basic select<a aria-labelledby="basic-select" class="anchor-link-style" href="#basic-select" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Menus are positioned under their emitting elements, unless they are close to the bottom of the viewport.</p>\n',{demo:"BasicSelect.js"},'<h2 id="advanced-features">Advanced features<a aria-labelledby="advanced-features" class="anchor-link-style" href="#advanced-features" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The Select component is meant to be interchangeable with a native <code>&lt;select&gt;</code> element.</p>\n<p>If you are looking for more advanced features, like combobox, multiselect, autocomplete, async or creatable support, head to the <a href="/material-ui/react-autocomplete/"><code>Autocomplete</code> component</a>.\nIt&#39;s meant to be an improved version of the &quot;react-select&quot; and &quot;downshift&quot; packages.</p>\n<h2 id="props">Props<a aria-labelledby="props" class="anchor-link-style" href="#props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The Select component is implemented as a custom <code>&lt;input&gt;</code> element of the <a href="/material-ui/api/input-base/">InputBase</a>.\nIt extends the <a href="/material-ui/react-text-field/">text field components</a> sub-components, either the <a href="/material-ui/api/outlined-input/">OutlinedInput</a>, <a href="/material-ui/api/input/">Input</a>, or <a href="/material-ui/api/filled-input/">FilledInput</a>, depending on the variant selected.\nIt shares the same styles and many of the same props. Refer to the respective component&#39;s API page for details.</p>\n<h3 id="filled-and-standard-variants">Filled and standard variants<a aria-labelledby="filled-and-standard-variants" class="anchor-link-style" href="#filled-and-standard-variants" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"SelectVariants.js"},'<h3 id="labels-and-helper-text">Labels and helper text<a aria-labelledby="labels-and-helper-text" class="anchor-link-style" href="#labels-and-helper-text" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"SelectLabels.js"},'<aside class="MuiCallout-root MuiCallout-warning"><p>\u26a0 Note that when using FormControl with the outlined variant of the Select, you need to provide a label in two places: in the InputLabel component and in the <code>label</code> prop of the Select component (see the above demo).</p>\n\n</aside><h3 id="auto-width">Auto width<a aria-labelledby="auto-width" class="anchor-link-style" href="#auto-width" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"SelectAutoWidth.js"},'<h3 id="small-size">Small Size<a aria-labelledby="small-size" class="anchor-link-style" href="#small-size" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"SelectSmall.js"},'<h3 id="other-props">Other props<a aria-labelledby="other-props" class="anchor-link-style" href="#other-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"SelectOtherProps.js"},'<h2 id="native-select">Native select<a aria-labelledby="native-select" class="anchor-link-style" href="#native-select" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>As the user experience can be improved on mobile using the native select of the platform,\nwe allow such pattern.</p>\n',{demo:"NativeSelect.js"},'<h2 id="textfield">TextField<a aria-labelledby="textfield" class="anchor-link-style" href="#textfield" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>TextField</code> wrapper component is a complete form control including a label, input and help text.\nYou can find an example with the select mode <a href="/material-ui/react-text-field/#select">in this section</a>.</p>\n<h2 id="customization">Customization<a aria-labelledby="customization" class="anchor-link-style" href="#customization" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Here are some examples of customizing the component.\nYou can learn more about this in the <a href="/material-ui/customization/how-to-customize/">overrides documentation page</a>.</p>\n<p>The first step is to style the <code>InputBase</code> component.\nOnce it&#39;s styled, you can either use it directly as a text field or provide it to the select <code>input</code> prop to have a <code>select</code> field.\nNotice that the <code>&quot;standard&quot;</code> variant is easier to customize, since it does not wrap the contents in a <code>fieldset</code>/<code>legend</code> markup.</p>\n',{demo:"CustomizedSelects.js"},'<p>\ud83c\udfa8 If you are looking for inspiration, you can check <a href="https://mui-treasury.com/styles/select/">MUI Treasury&#39;s customization examples</a>.</p>\n<h2 id="multiple-select">Multiple select<a aria-labelledby="multiple-select" class="anchor-link-style" href="#multiple-select" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>Select</code> component can handle multiple selections.\nIt&#39;s enabled with the <code>multiple</code> prop.</p>\n<p>Like with the single selection, you can pull out the new value by accessing <code>event.target.value</code> in the <code>onChange</code> callback. It&#39;s always an array.</p>\n<h3 id="default">Default<a aria-labelledby="default" class="anchor-link-style" href="#default" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"MultipleSelect.js"},'<h3 id="checkmarks">Checkmarks<a aria-labelledby="checkmarks" class="anchor-link-style" href="#checkmarks" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"MultipleSelectCheckmarks.js"},'<h3 id="chip">Chip<a aria-labelledby="chip" class="anchor-link-style" href="#chip" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"MultipleSelectChip.js"},'<h3 id="placeholder">Placeholder<a aria-labelledby="placeholder" class="anchor-link-style" href="#placeholder" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"MultipleSelectPlaceholder.js"},'<h3 id="native">Native<a aria-labelledby="native" class="anchor-link-style" href="#native" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"MultipleSelectNative.js"},'<h2 id="controlling-the-open-state">Controlling the open state<a aria-labelledby="controlling-the-open-state" class="anchor-link-style" href="#controlling-the-open-state" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>You can control the open state of the select with the <code>open</code> prop. Alternatively, it is also possible to set the initial (uncontrolled) open state of the component with the <code>defaultOpen</code> prop.</p>\n',{demo:"ControlledOpenSelect.js"},'<h2 id="with-a-dialog">With a dialog<a aria-labelledby="with-a-dialog" class="anchor-link-style" href="#with-a-dialog" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>While it&#39;s discouraged by the Material Design guidelines, you can use a select inside a dialog.</p>\n',{demo:"DialogSelect.js"},'<h2 id="grouping">Grouping<a aria-labelledby="grouping" class="anchor-link-style" href="#grouping" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Display categories with the <code>ListSubheader</code> component or the native <code>&lt;optgroup&gt;</code> element.</p>\n',{demo:"GroupedSelect.js"},'<h2 id="accessibility">Accessibility<a aria-labelledby="accessibility" class="anchor-link-style" href="#accessibility" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>To properly label your <code>Select</code> input you need an extra element with an <code>id</code> that contains a label.\nThat <code>id</code> needs to match the <code>labelId</code> of the <code>Select</code> e.g.</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InputLabel</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Age<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">InputLabel</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Select</span></span> <span class="token attr-name">labelId</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>label<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MenuItem</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Ten<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MenuItem</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MenuItem</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Twenty<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MenuItem</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Select</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<p>Alternatively a <code>TextField</code> with an <code>id</code> and <code>label</code> creates the proper markup and\nids for you:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">TextField</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Age<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span> <span class="token attr-name">select</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MenuItem</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Ten<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MenuItem</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MenuItem</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Twenty<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MenuItem</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">TextField</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<p>For a <a href="#native-select">native select</a>, you should mention a label by giving the value of the <code>id</code> attribute of the select element to the <code>InputLabel</code>&#39;s <code>htmlFor</code> attribute:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InputLabel</span></span> <span class="token attr-name">htmlFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Age<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">InputLabel</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">NativeSelect</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Ten<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Twenty<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">NativeSelect</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n','<h2 id="unstyled">Unstyled<a aria-labelledby="unstyled" class="anchor-link-style" href="#unstyled" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The component also comes with an <a href="/base/react-select/">unstyled version</a>. It&#39;s ideal for doing heavy customizations and minimizing bundle size.\n        </p>\n','<h2 id="api">API<a aria-labelledby="api" class="anchor-link-style" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/material-ui/api/native-select/"><code>&lt;NativeSelect /&gt;</code></a></li>\n<li><a href="/material-ui/api/select/"><code>&lt;Select /&gt;</code></a></li>\n</ul>\n'],toc:[{text:"Basic select",level:2,hash:"basic-select",children:[]},{text:"Advanced features",level:2,hash:"advanced-features",children:[]},{text:"Props",level:2,hash:"props",children:[{text:"Filled and standard variants",level:3,hash:"filled-and-standard-variants"},{text:"Labels and helper text",level:3,hash:"labels-and-helper-text"},{text:"Auto width",level:3,hash:"auto-width"},{text:"Small Size",level:3,hash:"small-size"},{text:"Other props",level:3,hash:"other-props"}]},{text:"Native select",level:2,hash:"native-select",children:[]},{text:"TextField",level:2,hash:"textfield",children:[]},{text:"Customization",level:2,hash:"customization",children:[]},{text:"Multiple select",level:2,hash:"multiple-select",children:[{text:"Default",level:3,hash:"default"},{text:"Checkmarks",level:3,hash:"checkmarks"},{text:"Chip",level:3,hash:"chip"},{text:"Placeholder",level:3,hash:"placeholder"},{text:"Native",level:3,hash:"native"}]},{text:"Controlling the open state",level:2,hash:"controlling-the-open-state",children:[]},{text:"With a dialog",level:2,hash:"with-a-dialog",children:[]},{text:"Grouping",level:2,hash:"grouping",children:[]},{text:"Accessibility",level:2,hash:"accessibility",children:[]},{text:"Unstyled",level:2,hash:"unstyled",children:[]},{text:"API",level:2,hash:"api",children:[]}],title:"React Select component",headers:{product:"material-ui",title:"React Select component",components:["NativeSelect","Select"],githubLabel:"component: select",waiAria:"https://www.w3.org/WAI/ARIA/apg/example-index/combobox/combobox-select-only.html",unstyled:"/base/react-select/"}},pt:{description:"Os componentes de sele\xe7\xe3o s\xe3o usados para coletar informa\xe7\xf5es fornecidas pelo usu\xe1rio em uma lista de op\xe7\xf5es.",location:"/docs/data/material/components/selects/selects-pt.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Sele\xe7\xe3o</h1><p class="description">Os componentes de sele\xe7\xe3o s\xe3o usados para coletar informa\xe7\xf5es fornecidas pelo usu\xe1rio em uma lista de op\xe7\xf5es.</p>\n\n',{component:"modules/components/ComponentLinkHeader.js"},'<h2 id="basic-select">Sele\xe7\xe3o Simples<a aria-labelledby="basic-select" class="anchor-link-style" href="#basic-select" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Os menus s\xe3o posicionados sobre seus elementos emissores, de modo que o item de menu atualmente selecionado apare\xe7a na parte superior do elemento emissor.</p>\n',{demo:"BasicSelect.js"},'<h2 id="advanced-features">Recursos avan\xe7ados<a aria-labelledby="advanced-features" class="anchor-link-style" href="#advanced-features" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>O componente <code>Select</code> \xe9 pensado para ser intercambi\xe1vel com um elemento nativo <code>&lt;select&gt;</code>.</p>\n<p>If you are looking for more advanced features, like combobox, multiselect, autocomplete, async or creatable support, head to the <a href="/pt/material-ui/react-autocomplete/"><code>Autocomplete</code> component</a>. A ideia dessa ferramenta \xe9 ser uma vers\xe3o melhorada das bibliotecas &quot;react-select&quot; e &quot;downshift&quot;.</p>\n<h2 id="props">Propriedades<a aria-labelledby="props" class="anchor-link-style" href="#props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The Select component is implemented as a custom <code>&lt;input&gt;</code> element of the <a href="/pt/material-ui/api/input-base/">InputBase</a>. It extends the <a href="/pt/material-ui/react-text-field/">text field components</a> sub-components, either the <a href="/pt/material-ui/api/outlined-input/">OutlinedInput</a>, <a href="/pt/material-ui/api/input/">Input</a>, or <a href="/pt/material-ui/api/filled-input/">FilledInput</a>, depending on the variant selected. Ele compartilha os mesmos estilos e muitas das mesmas propriedades. Consulte a p\xe1gina da API do respectivo componente para obter detalhes.</p>\n<h3 id="filled-and-standard-variants">Filled and standard variants<a aria-labelledby="filled-and-standard-variants" class="anchor-link-style" href="#filled-and-standard-variants" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"SelectVariants.js"},'<h3 id="labels-and-helper-text">R\xf3tulos e texto de ajuda<a aria-labelledby="labels-and-helper-text" class="anchor-link-style" href="#labels-and-helper-text" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"SelectLabels.js"},'<aside class="MuiCallout-root MuiCallout-warning"><p>\u26a0 Note that when using FormControl with the outlined variant of the Select, you need to provide a label in two places: in the InputLabel component and in the <code>label</code> prop of the Select component (see the above demo).</p>\n\n</aside><h3 id="auto-width">Largura autom\xe1tica<a aria-labelledby="auto-width" class="anchor-link-style" href="#auto-width" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"SelectAutoWidth.js"},'<h3 id="small-size">Small Size<a aria-labelledby="small-size" class="anchor-link-style" href="#small-size" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"SelectSmall.js"},'<h3 id="other-props">Other props<a aria-labelledby="other-props" class="anchor-link-style" href="#other-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"SelectOtherProps.js"},'<h2 id="native-select">Campos de Texto<a aria-labelledby="native-select" class="anchor-link-style" href="#native-select" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>As the user experience can be improved on mobile using the native select of the platform, we allow such pattern.</p>\n',{demo:"NativeSelect.js"},'<h2 id="textfield">TextField<a aria-labelledby="textfield" class="anchor-link-style" href="#textfield" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>TextField</code> wrapper component is a complete form control including a label, input and help text. You can find an example with the select mode <a href="/pt/material-ui/react-text-field/#select">in this section</a>.</p>\n<h2 id="customization">Sele\xe7\xf5es customizadas<a aria-labelledby="customization" class="anchor-link-style" href="#customization" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Here are some examples of customizing the component. You can learn more about this in the <a href="/pt/material-ui/customization/how-to-customize/">overrides documentation page</a>.</p>\n<p>The first step is to style the <code>InputBase</code> component. Once it&#39;s styled, you can either use it directly as a text field or provide it to the select <code>input</code> prop to have a <code>select</code> field. Notice that the <code>&quot;standard&quot;</code> variant is easier to customize, since it does not wrap the contents in a <code>fieldset</code>/<code>legend</code> markup.</p>\n',{demo:"CustomizedSelects.js"},'<p>\ud83c\udfa8 If you are looking for inspiration, you can check <a href="https://mui-treasury.com/styles/select/">MUI Treasury&#39;s customization examples</a>.</p>\n<h2 id="multiple-select">Sele\xe7\xe3o Aberta Controlada<a aria-labelledby="multiple-select" class="anchor-link-style" href="#multiple-select" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>Select</code> component can handle multiple selections. It&#39;s enabled with the <code>multiple</code> prop.</p>\n<p>Like with the single selection, you can pull out the new value by accessing <code>event.target.value</code> in the <code>onChange</code> callback. It&#39;s always an array.</p>\n<h3 id="default">Default<a aria-labelledby="default" class="anchor-link-style" href="#default" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"MultipleSelect.js"},'<h3 id="checkmarks">Checkmarks<a aria-labelledby="checkmarks" class="anchor-link-style" href="#checkmarks" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"MultipleSelectCheckmarks.js"},'<h3 id="chip">Chip<a aria-labelledby="chip" class="anchor-link-style" href="#chip" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"MultipleSelectChip.js"},'<h3 id="placeholder">Placeholder<a aria-labelledby="placeholder" class="anchor-link-style" href="#placeholder" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"MultipleSelectPlaceholder.js"},'<h3 id="native">Native<a aria-labelledby="native" class="anchor-link-style" href="#native" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"MultipleSelectNative.js"},'<h2 id="controlling-the-open-state">Sele\xe7\xe3o aberta controlada<a aria-labelledby="controlling-the-open-state" class="anchor-link-style" href="#controlling-the-open-state" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>You can control the open state of the select with the <code>open</code> prop. Alternatively, it is also possible to set the initial (uncontrolled) open state of the component with the <code>defaultOpen</code> prop.</p>\n',{demo:"ControlledOpenSelect.js"},'<h2 id="with-a-dialog">Com um di\xe1logo<a aria-labelledby="with-a-dialog" class="anchor-link-style" href="#with-a-dialog" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>While it&#39;s discouraged by the Material Design guidelines, you can use a select inside a dialog.</p>\n',{demo:"DialogSelect.js"},'<h2 id="grouping">Agrupando<a aria-labelledby="grouping" class="anchor-link-style" href="#grouping" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Display categories with the <code>ListSubheader</code> component or the native <code>&lt;optgroup&gt;</code> element.</p>\n',{demo:"GroupedSelect.js"},'<h2 id="accessibility">Acessibilidade<a aria-labelledby="accessibility" class="anchor-link-style" href="#accessibility" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>To properly label your <code>Select</code> input you need an extra element with an <code>id</code> that contains a label. That <code>id</code> needs to match the <code>labelId</code> of the <code>Select</code> e.g.</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InputLabel</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Age<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">InputLabel</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Select</span></span> <span class="token attr-name">labelId</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>label<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MenuItem</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Ten<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MenuItem</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MenuItem</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Twenty<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MenuItem</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Select</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<p>Alternatively a <code>TextField</code> with an <code>id</code> and <code>label</code> creates the proper markup and ids for you:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">TextField</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Age<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span> <span class="token attr-name">select</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MenuItem</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Ten<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MenuItem</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MenuItem</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Twenty<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MenuItem</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">TextField</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<p>For a <a href="#native-select">native select</a>, you should mention a label by giving the value of the <code>id</code> attribute of the select element to the <code>InputLabel</code>&#39;s <code>htmlFor</code> attribute:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InputLabel</span></span> <span class="token attr-name">htmlFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Age<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">InputLabel</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">NativeSelect</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Ten<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Twenty<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">NativeSelect</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n','<h2 id="unstyled">Unstyled<a aria-labelledby="unstyled" class="anchor-link-style" href="#unstyled" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The component also comes with an <a href="/pt/base/react-select/">unstyled version</a>. It&#39;s ideal for doing heavy customizations and minimizing bundle size.\n        </p>\n','<h2 id="api">API<a aria-labelledby="api" class="anchor-link-style" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/pt/material-ui/api/native-select/"><code>&lt;NativeSelect /&gt;</code></a></li>\n<li><a href="/pt/material-ui/api/select/"><code>&lt;Select /&gt;</code></a></li>\n</ul>\n'],toc:[{text:"Sele\xe7\xe3o Simples",level:2,hash:"basic-select",children:[]},{text:"Recursos avan\xe7ados",level:2,hash:"advanced-features",children:[]},{text:"Propriedades",level:2,hash:"props",children:[{text:"Filled and standard variants",level:3,hash:"filled-and-standard-variants"},{text:"R\xf3tulos e texto de ajuda",level:3,hash:"labels-and-helper-text"},{text:"Largura autom\xe1tica",level:3,hash:"auto-width"},{text:"Small Size",level:3,hash:"small-size"},{text:"Other props",level:3,hash:"other-props"}]},{text:"Campos de Texto",level:2,hash:"native-select",children:[]},{text:"TextField",level:2,hash:"textfield",children:[]},{text:"Sele\xe7\xf5es customizadas",level:2,hash:"customization",children:[]},{text:"Sele\xe7\xe3o Aberta Controlada",level:2,hash:"multiple-select",children:[{text:"Default",level:3,hash:"default"},{text:"Checkmarks",level:3,hash:"checkmarks"},{text:"Chip",level:3,hash:"chip"},{text:"Placeholder",level:3,hash:"placeholder"},{text:"Native",level:3,hash:"native"}]},{text:"Sele\xe7\xe3o aberta controlada",level:2,hash:"controlling-the-open-state",children:[]},{text:"Com um di\xe1logo",level:2,hash:"with-a-dialog",children:[]},{text:"Agrupando",level:2,hash:"grouping",children:[]},{text:"Acessibilidade",level:2,hash:"accessibility",children:[]},{text:"Unstyled",level:2,hash:"unstyled",children:[]},{text:"API",level:2,hash:"api",children:[]}],title:"Componente React Sele\xe7\xe3o",headers:{product:"material-ui",title:"Componente React Sele\xe7\xe3o",components:["NativeSelect","Select"],githubLabel:"component: select",waiAria:"https://www.w3.org/WAI/ARIA/apg/example-index/combobox/combobox-select-only.html",unstyled:"/base/react-select/"}},zh:{description:"\u9009\u62e9\u5668\u7ec4\u4ef6\u80fd\u4ece\u4e00\u4e2a\u9009\u9879\u5217\u8868\u4e2d\u53bb\u83b7\u5f97\u7528\u6237\u6240\u63d0\u4f9b\u7684\u4fe1\u606f\u3002",location:"/docs/data/material/components/selects/selects-zh.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Select \u9009\u62e9\u5668</h1><p class="description">\u9009\u62e9\u5668\u7ec4\u4ef6\u80fd\u4ece\u4e00\u4e2a\u9009\u9879\u5217\u8868\u4e2d\u53bb\u83b7\u5f97\u7528\u6237\u6240\u63d0\u4f9b\u7684\u4fe1\u606f\u3002</p>\n\n',{component:"modules/components/ComponentLinkHeader.js"},'<h2 id="basic-select">\u57fa\u7840\u7684\u9009\u62e9\u5668<a aria-labelledby="basic-select" class="anchor-link-style" href="#basic-select" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u6211\u4eec\u901a\u5e38\u5c06\u83dc\u5355\uff08Menus\uff09\u653e\u7f6e\u5728\u5176\u6240\u70b9\u51fb\u7684\u5143\u7d20\u4e0a\uff0c\u8fd9\u6837\u7684\u8bdd\u80fd\u591f\u786e\u4fdd\u5f53\u524d\u9009\u5b9a\u7684\u83dc\u5355\u9879\u663e\u793a\u5728\u70b9\u51fb\u7684\u5143\u7d20\u4e4b\u4e0a\u3002</p>\n',{demo:"BasicSelect.js"},'<h2 id="advanced-features">\u9ad8\u7ea7\u529f\u80fd<a aria-labelledby="advanced-features" class="anchor-link-style" href="#advanced-features" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Select \u7ec4\u4ef6\u7684\u8bbe\u8ba1\u539f\u7406\u662f\u548c\u4e00\u4e2a\u539f\u751f\u7684 <code>&lt;select&gt;</code> \u5143\u7d20\u80fd\u591f\u4e92\u76f8\u66ff\u4ee3\u3002</p>\n<p>If you are looking for more advanced features, like combobox, multiselect, autocomplete, async or creatable support, head to the <a href="/zh/material-ui/react-autocomplete/"><code>Autocomplete</code> component</a>. \u6b64\u7ec4\u4ef6\u65e8\u5728\u6539\u8fdb \u201creact-select\u201d \u548c \u201cdownshift\u201d \u8fd9\u4e24\u4e2a\u5305\u3002</p>\n<h2 id="props">\u5c5e\u6027<a aria-labelledby="props" class="anchor-link-style" href="#props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The Select component is implemented as a custom <code>&lt;input&gt;</code> element of the <a href="/zh/material-ui/api/input-base/">InputBase</a>. It extends the <a href="/zh/material-ui/react-text-field/">text field components</a> sub-components, either the <a href="/zh/material-ui/api/outlined-input/">OutlinedInput</a>, <a href="/zh/material-ui/api/input/">Input</a>, or <a href="/zh/material-ui/api/filled-input/">FilledInput</a>, depending on the variant selected. It shares the same styles and many of the same props. \u8be6\u60c5\u8bf7\u53c2\u9605\u76f8\u5e94\u7ec4\u4ef6\u7684 API \u6587\u6863\u3002</p>\n<h3 id="filled-and-standard-variants">Filled and standard variants<a aria-labelledby="filled-and-standard-variants" class="anchor-link-style" href="#filled-and-standard-variants" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"SelectVariants.js"},'<h3 id="labels-and-helper-text">\u6807\u7b7e\u548c\u52a9\u624b\u6587\u672c<a aria-labelledby="labels-and-helper-text" class="anchor-link-style" href="#labels-and-helper-text" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"SelectLabels.js"},'<aside class="MuiCallout-root MuiCallout-warning"><p>\u26a0 Note that when using FormControl with the outlined variant of the Select, you need to provide a label in two places: in the InputLabel component and in the <code>label</code> prop of the Select component (see the above demo).</p>\n\n</aside><h3 id="auto-width">\u81ea\u52a8\u5bbd\u5ea6<a aria-labelledby="auto-width" class="anchor-link-style" href="#auto-width" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"SelectAutoWidth.js"},'<h3 id="small-size">Small Size<a aria-labelledby="small-size" class="anchor-link-style" href="#small-size" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"SelectSmall.js"},'<h3 id="other-props">Other props<a aria-labelledby="other-props" class="anchor-link-style" href="#other-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"SelectOtherProps.js"},'<h2 id="native-select">\u539f\u751f\u9009\u62e9\u5668<a aria-labelledby="native-select" class="anchor-link-style" href="#native-select" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>As the user experience can be improved on mobile using the native select of the platform, we allow such pattern.</p>\n',{demo:"NativeSelect.js"},'<h2 id="textfield">TextField<a aria-labelledby="textfield" class="anchor-link-style" href="#textfield" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>TextField</code> wrapper component is a complete form control including a label, input and help text. You can find an example with the select mode <a href="/zh/material-ui/react-text-field/#select">in this section</a>.</p>\n<h2 id="customization">\u81ea\u5b9a\u4e49\u9009\u62e9\u5668<a aria-labelledby="customization" class="anchor-link-style" href="#customization" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Here are some examples of customizing the component. You can learn more about this in the <a href="/zh/material-ui/customization/how-to-customize/">overrides documentation page</a>.</p>\n<p>The first step is to style the <code>InputBase</code> component. Once it&#39;s styled, you can either use it directly as a text field or provide it to the select <code>input</code> prop to have a <code>select</code> field. Notice that the <code>&quot;standard&quot;</code> variant is easier to customize, since it does not wrap the contents in a <code>fieldset</code>/<code>legend</code> markup.</p>\n',{demo:"CustomizedSelects.js"},'<p>\ud83c\udfa8 If you are looking for inspiration, you can check <a href="https://mui-treasury.com/styles/select/">MUI Treasury&#39;s customization examples</a>.</p>\n<h2 id="multiple-select">\u591a\u91cd\u9009\u62e9<a aria-labelledby="multiple-select" class="anchor-link-style" href="#multiple-select" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>Select</code> component can handle multiple selections. It&#39;s enabled with the <code>multiple</code> prop.</p>\n<p>Like with the single selection, you can pull out the new value by accessing <code>event.target.value</code> in the <code>onChange</code> callback. It&#39;s always an array.</p>\n<h3 id="default">Default<a aria-labelledby="default" class="anchor-link-style" href="#default" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"MultipleSelect.js"},'<h3 id="checkmarks">Checkmarks<a aria-labelledby="checkmarks" class="anchor-link-style" href="#checkmarks" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"MultipleSelectCheckmarks.js"},'<h3 id="chip">Chip<a aria-labelledby="chip" class="anchor-link-style" href="#chip" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"MultipleSelectChip.js"},'<h3 id="placeholder">Placeholder<a aria-labelledby="placeholder" class="anchor-link-style" href="#placeholder" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"MultipleSelectPlaceholder.js"},'<h3 id="native">Native<a aria-labelledby="native" class="anchor-link-style" href="#native" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"MultipleSelectNative.js"},'<h2 id="controlling-the-open-state">\u53ef\u88ab\u63a7\u5236\u7684\u6253\u5f00\u9009\u62e9\u6846<a aria-labelledby="controlling-the-open-state" class="anchor-link-style" href="#controlling-the-open-state" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>You can control the open state of the select with the <code>open</code> prop. Alternatively, it is also possible to set the initial (uncontrolled) open state of the component with the <code>defaultOpen</code> prop.</p>\n',{demo:"ControlledOpenSelect.js"},'<h2 id="with-a-dialog">\u4e0e\u5bf9\u8bdd\u6846\u7ec4\u4ef6\uff08Dialog\uff09\u4e00\u8d77\u4f7f\u7528<a aria-labelledby="with-a-dialog" class="anchor-link-style" href="#with-a-dialog" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>While it&#39;s discouraged by the Material Design guidelines, you can use a select inside a dialog.</p>\n',{demo:"DialogSelect.js"},'<h2 id="grouping">\u8054\u52a8<a aria-labelledby="grouping" class="anchor-link-style" href="#grouping" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Display categories with the <code>ListSubheader</code> component or the native <code>&lt;optgroup&gt;</code> element.</p>\n',{demo:"GroupedSelect.js"},'<h2 id="accessibility">\u65e0\u969c\u788d\u8bbe\u8ba1<a aria-labelledby="accessibility" class="anchor-link-style" href="#accessibility" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>To properly label your <code>Select</code> input you need an extra element with an <code>id</code> that contains a label. That <code>id</code> needs to match the <code>labelId</code> of the <code>Select</code> e.g.</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InputLabel</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\u5e74\u9f84<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">InputLabel</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Select</span></span> <span class="token attr-name">labelId</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>label<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MenuItem</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token number">10</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MenuItem</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MenuItem</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token number">20</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MenuItem</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Select</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<p>Alternatively a <code>TextField</code> with an <code>id</code> and <code>label</code> creates the proper markup and ids for you:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">TextField</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Age<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span> <span class="token attr-name">select</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MenuItem</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Ten<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MenuItem</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MenuItem</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Twenty<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MenuItem</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">TextField</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<p>For a <a href="#native-select">native select</a>, you should mention a label by giving the value of the <code>id</code> attribute of the select element to the <code>InputLabel</code>&#39;s <code>htmlFor</code> attribute:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InputLabel</span></span> <span class="token attr-name">htmlFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Age<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">InputLabel</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">NativeSelect</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Ten<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Twenty<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">NativeSelect</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n','<h2 id="unstyled">Unstyled<a aria-labelledby="unstyled" class="anchor-link-style" href="#unstyled" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The component also comes with an <a href="/zh/base/react-select/">unstyled version</a>. It&#39;s ideal for doing heavy customizations and minimizing bundle size.\n        </p>\n','<h2 id="api">API<a aria-labelledby="api" class="anchor-link-style" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/zh/material-ui/api/native-select/"><code>&lt;NativeSelect /&gt;</code></a></li>\n<li><a href="/zh/material-ui/api/select/"><code>&lt;Select /&gt;</code></a></li>\n</ul>\n'],toc:[{text:"\u57fa\u7840\u7684\u9009\u62e9\u5668",level:2,hash:"basic-select",children:[]},{text:"\u9ad8\u7ea7\u529f\u80fd",level:2,hash:"advanced-features",children:[]},{text:"\u5c5e\u6027",level:2,hash:"props",children:[{text:"Filled and standard variants",level:3,hash:"filled-and-standard-variants"},{text:"\u6807\u7b7e\u548c\u52a9\u624b\u6587\u672c",level:3,hash:"labels-and-helper-text"},{text:"\u81ea\u52a8\u5bbd\u5ea6",level:3,hash:"auto-width"},{text:"Small Size",level:3,hash:"small-size"},{text:"Other props",level:3,hash:"other-props"}]},{text:"\u539f\u751f\u9009\u62e9\u5668",level:2,hash:"native-select",children:[]},{text:"TextField",level:2,hash:"textfield",children:[]},{text:"\u81ea\u5b9a\u4e49\u9009\u62e9\u5668",level:2,hash:"customization",children:[]},{text:"\u591a\u91cd\u9009\u62e9",level:2,hash:"multiple-select",children:[{text:"Default",level:3,hash:"default"},{text:"Checkmarks",level:3,hash:"checkmarks"},{text:"Chip",level:3,hash:"chip"},{text:"Placeholder",level:3,hash:"placeholder"},{text:"Native",level:3,hash:"native"}]},{text:"\u53ef\u88ab\u63a7\u5236\u7684\u6253\u5f00\u9009\u62e9\u6846",level:2,hash:"controlling-the-open-state",children:[]},{text:"\u4e0e\u5bf9\u8bdd\u6846\u7ec4\u4ef6\uff08Dialog\uff09\u4e00\u8d77\u4f7f\u7528",level:2,hash:"with-a-dialog",children:[]},{text:"\u8054\u52a8",level:2,hash:"grouping",children:[]},{text:"\u65e0\u969c\u788d\u8bbe\u8ba1",level:2,hash:"accessibility",children:[]},{text:"Unstyled",level:2,hash:"unstyled",children:[]},{text:"API",level:2,hash:"api",children:[]}],title:"React Select\uff08\u9009\u62e9\u5668\uff09\u7ec4\u4ef6",headers:{product:"material-ui",title:"React Select\uff08\u9009\u62e9\u5668\uff09\u7ec4\u4ef6",components:["NativeSelect","Select"],githubLabel:"component: select",waiAria:"https://www.w3.org/WAI/ARIA/apg/example-index/combobox/combobox-select-only.html",unstyled:"/base/react-select/"}}},sa={"BasicSelect.js":{module:"./BasicSelect.js",raw:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nexport default function BasicSelect() {\n  const [age, setAge] = React.useState('');\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n\n  return (\n    <Box sx={{ minWidth: 120 }}>\n      <FormControl fullWidth>\n        <InputLabel id=\"demo-simple-select-label\">Age</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={age}\n          label=\"Age\"\n          onChange={handleChange}\n        >\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n      </FormControl>\n    </Box>\n  );\n}\n",jsxPreview:'<FormControl fullWidth>\n  <InputLabel id="demo-simple-select-label">Age</InputLabel>\n  <Select\n    labelId="demo-simple-select-label"\n    id="demo-simple-select"\n    value={age}\n    label="Age"\n    onChange={handleChange}\n  >\n    <MenuItem value={10}>Ten</MenuItem>\n    <MenuItem value={20}>Twenty</MenuItem>\n    <MenuItem value={30}>Thirty</MenuItem>\n  </Select>\n</FormControl>',moduleTS:"./BasicSelect.js",rawTS:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\n\nexport default function BasicSelect() {\n  const [age, setAge] = React.useState('');\n\n  const handleChange = (event: SelectChangeEvent) => {\n    setAge(event.target.value as string);\n  };\n\n  return (\n    <Box sx={{ minWidth: 120 }}>\n      <FormControl fullWidth>\n        <InputLabel id=\"demo-simple-select-label\">Age</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={age}\n          label=\"Age\"\n          onChange={handleChange}\n        >\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n      </FormControl>\n    </Box>\n  );\n}\n"},"SelectAutoWidth.js":{module:"./SelectAutoWidth.js",raw:"import * as React from 'react';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nexport default function SelectAutoWidth() {\n  const [age, setAge] = React.useState('');\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, minWidth: 80 }}>\n        <InputLabel id=\"demo-simple-select-autowidth-label\">Age</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-autowidth-label\"\n          id=\"demo-simple-select-autowidth\"\n          value={age}\n          onChange={handleChange}\n          autoWidth\n          label=\"Age\"\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Twenty</MenuItem>\n          <MenuItem value={21}>Twenty one</MenuItem>\n          <MenuItem value={22}>Twenty one and a half</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n",moduleTS:"./SelectAutoWidth.js",rawTS:"import * as React from 'react';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\n\nexport default function SelectAutoWidth() {\n  const [age, setAge] = React.useState('');\n\n  const handleChange = (event: SelectChangeEvent) => {\n    setAge(event.target.value);\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, minWidth: 80 }}>\n        <InputLabel id=\"demo-simple-select-autowidth-label\">Age</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-autowidth-label\"\n          id=\"demo-simple-select-autowidth\"\n          value={age}\n          onChange={handleChange}\n          autoWidth\n          label=\"Age\"\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Twenty</MenuItem>\n          <MenuItem value={21}>Twenty one</MenuItem>\n          <MenuItem value={22}>Twenty one and a half</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n"},"SelectVariants.js":{module:"./SelectVariants.js",raw:'import * as React from \'react\';\nimport InputLabel from \'@mui/material/InputLabel\';\nimport MenuItem from \'@mui/material/MenuItem\';\nimport FormControl from \'@mui/material/FormControl\';\nimport Select from \'@mui/material/Select\';\n\nexport default function SelectVariants() {\n  const [age, setAge] = React.useState(\'\');\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n\n  return (\n    <div>\n      <FormControl variant="standard" sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel id="demo-simple-select-standard-label">Age</InputLabel>\n        <Select\n          labelId="demo-simple-select-standard-label"\n          id="demo-simple-select-standard"\n          value={age}\n          onChange={handleChange}\n          label="Age"\n        >\n          <MenuItem value="">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl variant="filled" sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel id="demo-simple-select-filled-label">Age</InputLabel>\n        <Select\n          labelId="demo-simple-select-filled-label"\n          id="demo-simple-select-filled"\n          value={age}\n          onChange={handleChange}\n        >\n          <MenuItem value="">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n',moduleTS:"./SelectVariants.js",rawTS:'import * as React from \'react\';\nimport InputLabel from \'@mui/material/InputLabel\';\nimport MenuItem from \'@mui/material/MenuItem\';\nimport FormControl from \'@mui/material/FormControl\';\nimport Select, { SelectChangeEvent } from \'@mui/material/Select\';\n\nexport default function SelectVariants() {\n  const [age, setAge] = React.useState(\'\');\n\n  const handleChange = (event: SelectChangeEvent) => {\n    setAge(event.target.value);\n  };\n\n  return (\n    <div>\n      <FormControl variant="standard" sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel id="demo-simple-select-standard-label">Age</InputLabel>\n        <Select\n          labelId="demo-simple-select-standard-label"\n          id="demo-simple-select-standard"\n          value={age}\n          onChange={handleChange}\n          label="Age"\n        >\n          <MenuItem value="">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl variant="filled" sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel id="demo-simple-select-filled-label">Age</InputLabel>\n        <Select\n          labelId="demo-simple-select-filled-label"\n          id="demo-simple-select-filled"\n          value={age}\n          onChange={handleChange}\n        >\n          <MenuItem value="">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n'},"SelectOtherProps.js":{module:"./SelectOtherProps.js",raw:'import * as React from \'react\';\nimport InputLabel from \'@mui/material/InputLabel\';\nimport MenuItem from \'@mui/material/MenuItem\';\nimport FormHelperText from \'@mui/material/FormHelperText\';\nimport FormControl from \'@mui/material/FormControl\';\nimport Select from \'@mui/material/Select\';\n\nexport default function SelectOtherProps() {\n  const [age, setAge] = React.useState(\'\');\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, minWidth: 120 }} disabled>\n        <InputLabel id="demo-simple-select-disabled-label">Age</InputLabel>\n        <Select\n          labelId="demo-simple-select-disabled-label"\n          id="demo-simple-select-disabled"\n          value={age}\n          label="Age"\n          onChange={handleChange}\n        >\n          <MenuItem value="">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n        <FormHelperText>Disabled</FormHelperText>\n      </FormControl>\n      <FormControl sx={{ m: 1, minWidth: 120 }} error>\n        <InputLabel id="demo-simple-select-error-label">Age</InputLabel>\n        <Select\n          labelId="demo-simple-select-error-label"\n          id="demo-simple-select-error"\n          value={age}\n          label="Age"\n          onChange={handleChange}\n          renderValue={(value) => `\u26a0\ufe0f  - ${value}`}\n        >\n          <MenuItem value="">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n        <FormHelperText>Error</FormHelperText>\n      </FormControl>\n      <FormControl sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel id="demo-simple-select-readonly-label">Age</InputLabel>\n        <Select\n          labelId="demo-simple-select-readonly-label"\n          id="demo-simple-select-readonly"\n          value={age}\n          label="Age"\n          onChange={handleChange}\n          inputProps={{ readOnly: true }}\n        >\n          <MenuItem value="">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n        <FormHelperText>Read only</FormHelperText>\n      </FormControl>\n      <FormControl required sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel id="demo-simple-select-required-label">Age</InputLabel>\n        <Select\n          labelId="demo-simple-select-required-label"\n          id="demo-simple-select-required"\n          value={age}\n          label="Age *"\n          onChange={handleChange}\n        >\n          <MenuItem value="">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n        <FormHelperText>Required</FormHelperText>\n      </FormControl>\n    </div>\n  );\n}\n',moduleTS:"./SelectOtherProps.js",rawTS:'import * as React from \'react\';\nimport InputLabel from \'@mui/material/InputLabel\';\nimport MenuItem from \'@mui/material/MenuItem\';\nimport FormHelperText from \'@mui/material/FormHelperText\';\nimport FormControl from \'@mui/material/FormControl\';\nimport Select, { SelectChangeEvent } from \'@mui/material/Select\';\n\nexport default function SelectOtherProps() {\n  const [age, setAge] = React.useState(\'\');\n\n  const handleChange = (event: SelectChangeEvent) => {\n    setAge(event.target.value);\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, minWidth: 120 }} disabled>\n        <InputLabel id="demo-simple-select-disabled-label">Age</InputLabel>\n        <Select\n          labelId="demo-simple-select-disabled-label"\n          id="demo-simple-select-disabled"\n          value={age}\n          label="Age"\n          onChange={handleChange}\n        >\n          <MenuItem value="">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n        <FormHelperText>Disabled</FormHelperText>\n      </FormControl>\n      <FormControl sx={{ m: 1, minWidth: 120 }} error>\n        <InputLabel id="demo-simple-select-error-label">Age</InputLabel>\n        <Select\n          labelId="demo-simple-select-error-label"\n          id="demo-simple-select-error"\n          value={age}\n          label="Age"\n          onChange={handleChange}\n          renderValue={(value) => `\u26a0\ufe0f  - ${value}`}\n        >\n          <MenuItem value="">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n        <FormHelperText>Error</FormHelperText>\n      </FormControl>\n      <FormControl sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel id="demo-simple-select-readonly-label">Age</InputLabel>\n        <Select\n          labelId="demo-simple-select-readonly-label"\n          id="demo-simple-select-readonly"\n          value={age}\n          label="Age"\n          onChange={handleChange}\n          inputProps={{ readOnly: true }}\n        >\n          <MenuItem value="">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n        <FormHelperText>Read only</FormHelperText>\n      </FormControl>\n      <FormControl required sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel id="demo-simple-select-required-label">Age</InputLabel>\n        <Select\n          labelId="demo-simple-select-required-label"\n          id="demo-simple-select-required"\n          value={age}\n          label="Age *"\n          onChange={handleChange}\n        >\n          <MenuItem value="">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n        <FormHelperText>Required</FormHelperText>\n      </FormControl>\n    </div>\n  );\n}\n'},"NativeSelect.js":{module:"./NativeSelect.js",raw:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport NativeSelect from '@mui/material/NativeSelect';\n\nexport default function NativeSelectDemo() {\n  return (\n    <Box sx={{ minWidth: 120 }}>\n      <FormControl fullWidth>\n        <InputLabel variant=\"standard\" htmlFor=\"uncontrolled-native\">\n          Age\n        </InputLabel>\n        <NativeSelect\n          defaultValue={30}\n          inputProps={{\n            name: 'age',\n            id: 'uncontrolled-native',\n          }}\n        >\n          <option value={10}>Ten</option>\n          <option value={20}>Twenty</option>\n          <option value={30}>Thirty</option>\n        </NativeSelect>\n      </FormControl>\n    </Box>\n  );\n}\n",jsxPreview:"<FormControl fullWidth>\n  <InputLabel variant=\"standard\" htmlFor=\"uncontrolled-native\">\n    Age\n  </InputLabel>\n  <NativeSelect\n    defaultValue={30}\n    inputProps={{\n      name: 'age',\n      id: 'uncontrolled-native',\n    }}\n  >\n    <option value={10}>Ten</option>\n    <option value={20}>Twenty</option>\n    <option value={30}>Thirty</option>\n  </NativeSelect>\n</FormControl>",moduleTS:"./NativeSelect.js",rawTS:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport NativeSelect from '@mui/material/NativeSelect';\n\nexport default function NativeSelectDemo() {\n  return (\n    <Box sx={{ minWidth: 120 }}>\n      <FormControl fullWidth>\n        <InputLabel variant=\"standard\" htmlFor=\"uncontrolled-native\">\n          Age\n        </InputLabel>\n        <NativeSelect\n          defaultValue={30}\n          inputProps={{\n            name: 'age',\n            id: 'uncontrolled-native',\n          }}\n        >\n          <option value={10}>Ten</option>\n          <option value={20}>Twenty</option>\n          <option value={30}>Thirty</option>\n        </NativeSelect>\n      </FormControl>\n    </Box>\n  );\n}\n"},"SelectLabels.js":{module:"./SelectLabels.js",raw:"import * as React from 'react';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nexport default function SelectLabels() {\n  const [age, setAge] = React.useState('');\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel id=\"demo-simple-select-helper-label\">Age</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-helper-label\"\n          id=\"demo-simple-select-helper\"\n          value={age}\n          label=\"Age\"\n          onChange={handleChange}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n        <FormHelperText>With label + helper text</FormHelperText>\n      </FormControl>\n      <FormControl sx={{ m: 1, minWidth: 120 }}>\n        <Select\n          value={age}\n          onChange={handleChange}\n          displayEmpty\n          inputProps={{ 'aria-label': 'Without label' }}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n        <FormHelperText>Without label</FormHelperText>\n      </FormControl>\n    </div>\n  );\n}\n",moduleTS:"./SelectLabels.js",rawTS:"import * as React from 'react';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\n\nexport default function SelectLabels() {\n  const [age, setAge] = React.useState('');\n\n  const handleChange = (event: SelectChangeEvent) => {\n    setAge(event.target.value);\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel id=\"demo-simple-select-helper-label\">Age</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-helper-label\"\n          id=\"demo-simple-select-helper\"\n          value={age}\n          label=\"Age\"\n          onChange={handleChange}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n        <FormHelperText>With label + helper text</FormHelperText>\n      </FormControl>\n      <FormControl sx={{ m: 1, minWidth: 120 }}>\n        <Select\n          value={age}\n          onChange={handleChange}\n          displayEmpty\n          inputProps={{ 'aria-label': 'Without label' }}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n        <FormHelperText>Without label</FormHelperText>\n      </FormControl>\n    </div>\n  );\n}\n"},"CustomizedSelects.js":{module:"./CustomizedSelects.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport NativeSelect from '@mui/material/NativeSelect';\nimport InputBase from '@mui/material/InputBase';\n\nconst BootstrapInput = styled(InputBase)(({ theme }) => ({\n  'label + &': {\n    marginTop: theme.spacing(3),\n  },\n  '& .MuiInputBase-input': {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}));\n\nexport default function CustomizedSelects() {\n  const [age, setAge] = React.useState('');\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n  return (\n    <div>\n      <FormControl sx={{ m: 1 }} variant=\"standard\">\n        <InputLabel htmlFor=\"demo-customized-textbox\">Age</InputLabel>\n        <BootstrapInput id=\"demo-customized-textbox\" />\n      </FormControl>\n      <FormControl sx={{ m: 1 }} variant=\"standard\">\n        <InputLabel id=\"demo-customized-select-label\">Age</InputLabel>\n        <Select\n          labelId=\"demo-customized-select-label\"\n          id=\"demo-customized-select\"\n          value={age}\n          onChange={handleChange}\n          input={<BootstrapInput />}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl sx={{ m: 1 }} variant=\"standard\">\n        <InputLabel htmlFor=\"demo-customized-select-native\">Age</InputLabel>\n        <NativeSelect\n          id=\"demo-customized-select-native\"\n          value={age}\n          onChange={handleChange}\n          input={<BootstrapInput />}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          <option value={10}>Ten</option>\n          <option value={20}>Twenty</option>\n          <option value={30}>Thirty</option>\n        </NativeSelect>\n      </FormControl>\n    </div>\n  );\n}\n",moduleTS:"./CustomizedSelects.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport NativeSelect from '@mui/material/NativeSelect';\nimport InputBase from '@mui/material/InputBase';\n\nconst BootstrapInput = styled(InputBase)(({ theme }) => ({\n  'label + &': {\n    marginTop: theme.spacing(3),\n  },\n  '& .MuiInputBase-input': {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}));\n\nexport default function CustomizedSelects() {\n  const [age, setAge] = React.useState('');\n  const handleChange = (event: { target: { value: string } }) => {\n    setAge(event.target.value);\n  };\n  return (\n    <div>\n      <FormControl sx={{ m: 1 }} variant=\"standard\">\n        <InputLabel htmlFor=\"demo-customized-textbox\">Age</InputLabel>\n        <BootstrapInput id=\"demo-customized-textbox\" />\n      </FormControl>\n      <FormControl sx={{ m: 1 }} variant=\"standard\">\n        <InputLabel id=\"demo-customized-select-label\">Age</InputLabel>\n        <Select\n          labelId=\"demo-customized-select-label\"\n          id=\"demo-customized-select\"\n          value={age}\n          onChange={handleChange}\n          input={<BootstrapInput />}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl sx={{ m: 1 }} variant=\"standard\">\n        <InputLabel htmlFor=\"demo-customized-select-native\">Age</InputLabel>\n        <NativeSelect\n          id=\"demo-customized-select-native\"\n          value={age}\n          onChange={handleChange}\n          input={<BootstrapInput />}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          <option value={10}>Ten</option>\n          <option value={20}>Twenty</option>\n          <option value={30}>Thirty</option>\n        </NativeSelect>\n      </FormControl>\n    </div>\n  );\n}\n"},"SelectSmall.js":{module:"./SelectSmall.js",raw:"import * as React from 'react';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nexport default function SelectSmall() {\n  const [age, setAge] = React.useState('');\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n\n  return (\n    <FormControl sx={{ m: 1, minWidth: 120 }} size=\"small\">\n      <InputLabel id=\"demo-select-small\">Age</InputLabel>\n      <Select\n        labelId=\"demo-select-small\"\n        id=\"demo-select-small\"\n        value={age}\n        label=\"Age\"\n        onChange={handleChange}\n      >\n        <MenuItem value=\"\">\n          <em>None</em>\n        </MenuItem>\n        <MenuItem value={10}>Ten</MenuItem>\n        <MenuItem value={20}>Twenty</MenuItem>\n        <MenuItem value={30}>Thirty</MenuItem>\n      </Select>\n    </FormControl>\n  );\n}\n",moduleTS:"./SelectSmall.js",rawTS:"import * as React from 'react';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\n\nexport default function SelectSmall() {\n  const [age, setAge] = React.useState('');\n\n  const handleChange = (event: SelectChangeEvent) => {\n    setAge(event.target.value);\n  };\n\n  return (\n    <FormControl sx={{ m: 1, minWidth: 120 }} size=\"small\">\n      <InputLabel id=\"demo-select-small\">Age</InputLabel>\n      <Select\n        labelId=\"demo-select-small\"\n        id=\"demo-select-small\"\n        value={age}\n        label=\"Age\"\n        onChange={handleChange}\n      >\n        <MenuItem value=\"\">\n          <em>None</em>\n        </MenuItem>\n        <MenuItem value={10}>Ten</MenuItem>\n        <MenuItem value={20}>Twenty</MenuItem>\n        <MenuItem value={30}>Thirty</MenuItem>\n      </Select>\n    </FormControl>\n  );\n}\n"},"MultipleSelect.js":{module:"./MultipleSelect.js",raw:"import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport default function MultipleSelect() {\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, width: 300 }}>\n        <InputLabel id=\"demo-multiple-name-label\">Name</InputLabel>\n        <Select\n          labelId=\"demo-multiple-name-label\"\n          id=\"demo-multiple-name\"\n          multiple\n          value={personName}\n          onChange={handleChange}\n          input={<OutlinedInput label=\"Name\" />}\n          MenuProps={MenuProps}\n        >\n          {names.map((name) => (\n            <MenuItem\n              key={name}\n              value={name}\n              style={getStyles(name, personName, theme)}\n            >\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n",moduleTS:"./MultipleSelect.js",rawTS:"import * as React from 'react';\nimport { Theme, useTheme } from '@mui/material/styles';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nfunction getStyles(name: string, personName: string[], theme: Theme) {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport default function MultipleSelect() {\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState<string[]>([]);\n\n  const handleChange = (event: SelectChangeEvent<typeof personName>) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, width: 300 }}>\n        <InputLabel id=\"demo-multiple-name-label\">Name</InputLabel>\n        <Select\n          labelId=\"demo-multiple-name-label\"\n          id=\"demo-multiple-name\"\n          multiple\n          value={personName}\n          onChange={handleChange}\n          input={<OutlinedInput label=\"Name\" />}\n          MenuProps={MenuProps}\n        >\n          {names.map((name) => (\n            <MenuItem\n              key={name}\n              value={name}\n              style={getStyles(name, personName, theme)}\n            >\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n"},"MultipleSelectCheckmarks.js":{module:"./MultipleSelectCheckmarks.js",raw:"import * as React from 'react';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport ListItemText from '@mui/material/ListItemText';\nimport Select from '@mui/material/Select';\nimport Checkbox from '@mui/material/Checkbox';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nexport default function MultipleSelectCheckmarks() {\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, width: 300 }}>\n        <InputLabel id=\"demo-multiple-checkbox-label\">Tag</InputLabel>\n        <Select\n          labelId=\"demo-multiple-checkbox-label\"\n          id=\"demo-multiple-checkbox\"\n          multiple\n          value={personName}\n          onChange={handleChange}\n          input={<OutlinedInput label=\"Tag\" />}\n          renderValue={(selected) => selected.join(', ')}\n          MenuProps={MenuProps}\n        >\n          {names.map((name) => (\n            <MenuItem key={name} value={name}>\n              <Checkbox checked={personName.indexOf(name) > -1} />\n              <ListItemText primary={name} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n",moduleTS:"./MultipleSelectCheckmarks.js",rawTS:"import * as React from 'react';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport ListItemText from '@mui/material/ListItemText';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport Checkbox from '@mui/material/Checkbox';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nexport default function MultipleSelectCheckmarks() {\n  const [personName, setPersonName] = React.useState<string[]>([]);\n\n  const handleChange = (event: SelectChangeEvent<typeof personName>) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, width: 300 }}>\n        <InputLabel id=\"demo-multiple-checkbox-label\">Tag</InputLabel>\n        <Select\n          labelId=\"demo-multiple-checkbox-label\"\n          id=\"demo-multiple-checkbox\"\n          multiple\n          value={personName}\n          onChange={handleChange}\n          input={<OutlinedInput label=\"Tag\" />}\n          renderValue={(selected) => selected.join(', ')}\n          MenuProps={MenuProps}\n        >\n          {names.map((name) => (\n            <MenuItem key={name} value={name}>\n              <Checkbox checked={personName.indexOf(name) > -1} />\n              <ListItemText primary={name} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n"},"MultipleSelectChip.js":{module:"./MultipleSelectChip.js",raw:"import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Chip from '@mui/material/Chip';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport default function MultipleSelectChip() {\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, width: 300 }}>\n        <InputLabel id=\"demo-multiple-chip-label\">Chip</InputLabel>\n        <Select\n          labelId=\"demo-multiple-chip-label\"\n          id=\"demo-multiple-chip\"\n          multiple\n          value={personName}\n          onChange={handleChange}\n          input={<OutlinedInput id=\"select-multiple-chip\" label=\"Chip\" />}\n          renderValue={(selected) => (\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n              {selected.map((value) => (\n                <Chip key={value} label={value} />\n              ))}\n            </Box>\n          )}\n          MenuProps={MenuProps}\n        >\n          {names.map((name) => (\n            <MenuItem\n              key={name}\n              value={name}\n              style={getStyles(name, personName, theme)}\n            >\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n",moduleTS:"./MultipleSelectChip.js",rawTS:"import * as React from 'react';\nimport { Theme, useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport Chip from '@mui/material/Chip';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nfunction getStyles(name: string, personName: readonly string[], theme: Theme) {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport default function MultipleSelectChip() {\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState<string[]>([]);\n\n  const handleChange = (event: SelectChangeEvent<typeof personName>) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, width: 300 }}>\n        <InputLabel id=\"demo-multiple-chip-label\">Chip</InputLabel>\n        <Select\n          labelId=\"demo-multiple-chip-label\"\n          id=\"demo-multiple-chip\"\n          multiple\n          value={personName}\n          onChange={handleChange}\n          input={<OutlinedInput id=\"select-multiple-chip\" label=\"Chip\" />}\n          renderValue={(selected) => (\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n              {selected.map((value) => (\n                <Chip key={value} label={value} />\n              ))}\n            </Box>\n          )}\n          MenuProps={MenuProps}\n        >\n          {names.map((name) => (\n            <MenuItem\n              key={name}\n              value={name}\n              style={getStyles(name, personName, theme)}\n            >\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n"},"ControlledOpenSelect.js":{module:"./ControlledOpenSelect.js",raw:"import * as React from 'react';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Button from '@mui/material/Button';\n\nexport default function ControlledOpenSelect() {\n  const [age, setAge] = React.useState('');\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div>\n      <Button sx={{ display: 'block', mt: 2 }} onClick={handleOpen}>\n        Open the select\n      </Button>\n      <FormControl sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Age</InputLabel>\n        <Select\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={open}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          value={age}\n          label=\"Age\"\n          onChange={handleChange}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n",moduleTS:"./ControlledOpenSelect.js",rawTS:"import * as React from 'react';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport Button from '@mui/material/Button';\n\nexport default function ControlledOpenSelect() {\n  const [age, setAge] = React.useState<string | number>('');\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = (event: SelectChangeEvent<typeof age>) => {\n    setAge(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div>\n      <Button sx={{ display: 'block', mt: 2 }} onClick={handleOpen}>\n        Open the select\n      </Button>\n      <FormControl sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Age</InputLabel>\n        <Select\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={open}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          value={age}\n          label=\"Age\"\n          onChange={handleChange}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n"},"MultipleSelectNative.js":{module:"./MultipleSelectNative.js",raw:"import * as React from 'react';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nexport default function MultipleSelectNative() {\n  const [personName, setPersonName] = React.useState([]);\n  const handleChangeMultiple = (event) => {\n    const { options } = event.target;\n    const value = [];\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n    setPersonName(value);\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, minWidth: 120, maxWidth: 300 }}>\n        <InputLabel shrink htmlFor=\"select-multiple-native\">\n          Native\n        </InputLabel>\n        <Select\n          multiple\n          native\n          value={personName}\n          // @ts-ignore Typings are not considering `native`\n          onChange={handleChangeMultiple}\n          label=\"Native\"\n          inputProps={{\n            id: 'select-multiple-native',\n          }}\n        >\n          {names.map((name) => (\n            <option key={name} value={name}>\n              {name}\n            </option>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n",moduleTS:"./MultipleSelectNative.js",rawTS:"import * as React from 'react';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nexport default function MultipleSelectNative() {\n  const [personName, setPersonName] = React.useState<string[]>([]);\n  const handleChangeMultiple = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { options } = event.target;\n    const value: string[] = [];\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n    setPersonName(value);\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, minWidth: 120, maxWidth: 300 }}>\n        <InputLabel shrink htmlFor=\"select-multiple-native\">\n          Native\n        </InputLabel>\n        <Select\n          multiple\n          native\n          value={personName}\n          // @ts-ignore Typings are not considering `native`\n          onChange={handleChangeMultiple}\n          label=\"Native\"\n          inputProps={{\n            id: 'select-multiple-native',\n          }}\n        >\n          {names.map((name) => (\n            <option key={name} value={name}>\n              {name}\n            </option>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n"},"GroupedSelect.js":{module:"./GroupedSelect.js",raw:'import * as React from \'react\';\nimport InputLabel from \'@mui/material/InputLabel\';\nimport MenuItem from \'@mui/material/MenuItem\';\nimport ListSubheader from \'@mui/material/ListSubheader\';\nimport FormControl from \'@mui/material/FormControl\';\nimport Select from \'@mui/material/Select\';\n\nexport default function GroupedSelect() {\n  return (\n    <div>\n      <FormControl sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel htmlFor="grouped-native-select">Grouping</InputLabel>\n        <Select native defaultValue="" id="grouped-native-select" label="Grouping">\n          <option aria-label="None" value="" />\n          <optgroup label="Category 1">\n            <option value={1}>Option 1</option>\n            <option value={2}>Option 2</option>\n          </optgroup>\n          <optgroup label="Category 2">\n            <option value={3}>Option 3</option>\n            <option value={4}>Option 4</option>\n          </optgroup>\n        </Select>\n      </FormControl>\n      <FormControl sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel htmlFor="grouped-select">Grouping</InputLabel>\n        <Select defaultValue="" id="grouped-select" label="Grouping">\n          <MenuItem value="">\n            <em>None</em>\n          </MenuItem>\n          <ListSubheader>Category 1</ListSubheader>\n          <MenuItem value={1}>Option 1</MenuItem>\n          <MenuItem value={2}>Option 2</MenuItem>\n          <ListSubheader>Category 2</ListSubheader>\n          <MenuItem value={3}>Option 3</MenuItem>\n          <MenuItem value={4}>Option 4</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n',moduleTS:"./GroupedSelect.js",rawTS:'import * as React from \'react\';\nimport InputLabel from \'@mui/material/InputLabel\';\nimport MenuItem from \'@mui/material/MenuItem\';\nimport ListSubheader from \'@mui/material/ListSubheader\';\nimport FormControl from \'@mui/material/FormControl\';\nimport Select from \'@mui/material/Select\';\n\nexport default function GroupedSelect() {\n  return (\n    <div>\n      <FormControl sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel htmlFor="grouped-native-select">Grouping</InputLabel>\n        <Select native defaultValue="" id="grouped-native-select" label="Grouping">\n          <option aria-label="None" value="" />\n          <optgroup label="Category 1">\n            <option value={1}>Option 1</option>\n            <option value={2}>Option 2</option>\n          </optgroup>\n          <optgroup label="Category 2">\n            <option value={3}>Option 3</option>\n            <option value={4}>Option 4</option>\n          </optgroup>\n        </Select>\n      </FormControl>\n      <FormControl sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel htmlFor="grouped-select">Grouping</InputLabel>\n        <Select defaultValue="" id="grouped-select" label="Grouping">\n          <MenuItem value="">\n            <em>None</em>\n          </MenuItem>\n          <ListSubheader>Category 1</ListSubheader>\n          <MenuItem value={1}>Option 1</MenuItem>\n          <MenuItem value={2}>Option 2</MenuItem>\n          <ListSubheader>Category 2</ListSubheader>\n          <MenuItem value={3}>Option 3</MenuItem>\n          <MenuItem value={4}>Option 4</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n'},"DialogSelect.js":{module:"./DialogSelect.js",raw:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport InputLabel from '@mui/material/InputLabel';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nexport default function DialogSelect() {\n  const [open, setOpen] = React.useState(false);\n  const [age, setAge] = React.useState('');\n\n  const handleChange = (event) => {\n    setAge(Number(event.target.value) || '');\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason !== 'backdropClick') {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <div>\n      <Button onClick={handleClickOpen}>Open select dialog</Button>\n      <Dialog disableEscapeKeyDown open={open} onClose={handleClose}>\n        <DialogTitle>Fill the form</DialogTitle>\n        <DialogContent>\n          <Box component=\"form\" sx={{ display: 'flex', flexWrap: 'wrap' }}>\n            <FormControl sx={{ m: 1, minWidth: 120 }}>\n              <InputLabel htmlFor=\"demo-dialog-native\">Age</InputLabel>\n              <Select\n                native\n                value={age}\n                onChange={handleChange}\n                input={<OutlinedInput label=\"Age\" id=\"demo-dialog-native\" />}\n              >\n                <option aria-label=\"None\" value=\"\" />\n                <option value={10}>Ten</option>\n                <option value={20}>Twenty</option>\n                <option value={30}>Thirty</option>\n              </Select>\n            </FormControl>\n            <FormControl sx={{ m: 1, minWidth: 120 }}>\n              <InputLabel id=\"demo-dialog-select-label\">Age</InputLabel>\n              <Select\n                labelId=\"demo-dialog-select-label\"\n                id=\"demo-dialog-select\"\n                value={age}\n                onChange={handleChange}\n                input={<OutlinedInput label=\"Age\" />}\n              >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                <MenuItem value={10}>Ten</MenuItem>\n                <MenuItem value={20}>Twenty</MenuItem>\n                <MenuItem value={30}>Thirty</MenuItem>\n              </Select>\n            </FormControl>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleClose}>Ok</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n",moduleTS:"./DialogSelect.js",rawTS:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport InputLabel from '@mui/material/InputLabel';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\n\nexport default function DialogSelect() {\n  const [open, setOpen] = React.useState(false);\n  const [age, setAge] = React.useState<number | string>('');\n\n  const handleChange = (event: SelectChangeEvent<typeof age>) => {\n    setAge(Number(event.target.value) || '');\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event: React.SyntheticEvent<unknown>, reason?: string) => {\n    if (reason !== 'backdropClick') {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <div>\n      <Button onClick={handleClickOpen}>Open select dialog</Button>\n      <Dialog disableEscapeKeyDown open={open} onClose={handleClose}>\n        <DialogTitle>Fill the form</DialogTitle>\n        <DialogContent>\n          <Box component=\"form\" sx={{ display: 'flex', flexWrap: 'wrap' }}>\n            <FormControl sx={{ m: 1, minWidth: 120 }}>\n              <InputLabel htmlFor=\"demo-dialog-native\">Age</InputLabel>\n              <Select\n                native\n                value={age}\n                onChange={handleChange}\n                input={<OutlinedInput label=\"Age\" id=\"demo-dialog-native\" />}\n              >\n                <option aria-label=\"None\" value=\"\" />\n                <option value={10}>Ten</option>\n                <option value={20}>Twenty</option>\n                <option value={30}>Thirty</option>\n              </Select>\n            </FormControl>\n            <FormControl sx={{ m: 1, minWidth: 120 }}>\n              <InputLabel id=\"demo-dialog-select-label\">Age</InputLabel>\n              <Select\n                labelId=\"demo-dialog-select-label\"\n                id=\"demo-dialog-select\"\n                value={age}\n                onChange={handleChange}\n                input={<OutlinedInput label=\"Age\" />}\n              >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                <MenuItem value={10}>Ten</MenuItem>\n                <MenuItem value={20}>Twenty</MenuItem>\n                <MenuItem value={30}>Thirty</MenuItem>\n              </Select>\n            </FormControl>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleClose}>Ok</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n"},"MultipleSelectPlaceholder.js":{module:"./MultipleSelectPlaceholder.js",raw:"import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport default function MultipleSelectPlaceholder() {\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, width: 300, mt: 3 }}>\n        <Select\n          multiple\n          displayEmpty\n          value={personName}\n          onChange={handleChange}\n          input={<OutlinedInput />}\n          renderValue={(selected) => {\n            if (selected.length === 0) {\n              return <em>Placeholder</em>;\n            }\n\n            return selected.join(', ');\n          }}\n          MenuProps={MenuProps}\n          inputProps={{ 'aria-label': 'Without label' }}\n        >\n          <MenuItem disabled value=\"\">\n            <em>Placeholder</em>\n          </MenuItem>\n          {names.map((name) => (\n            <MenuItem\n              key={name}\n              value={name}\n              style={getStyles(name, personName, theme)}\n            >\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n",moduleTS:"./MultipleSelectPlaceholder.js",rawTS:"import * as React from 'react';\nimport { Theme, useTheme } from '@mui/material/styles';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nfunction getStyles(name: string, personName: readonly string[], theme: Theme) {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport default function MultipleSelectPlaceholder() {\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState<string[]>([]);\n\n  const handleChange = (event: SelectChangeEvent<typeof personName>) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, width: 300, mt: 3 }}>\n        <Select\n          multiple\n          displayEmpty\n          value={personName}\n          onChange={handleChange}\n          input={<OutlinedInput />}\n          renderValue={(selected) => {\n            if (selected.length === 0) {\n              return <em>Placeholder</em>;\n            }\n\n            return selected.join(', ');\n          }}\n          MenuProps={MenuProps}\n          inputProps={{ 'aria-label': 'Without label' }}\n        >\n          <MenuItem disabled value=\"\">\n            <em>Placeholder</em>\n          </MenuItem>\n          {names.map((name) => (\n            <MenuItem\n              key={name}\n              value={name}\n              style={getStyles(name, personName, theme)}\n            >\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n"}},oa={"./BasicSelect.js":function(){var e=I.useState(""),n=(0,C.Z)(e,2),a=n[0],i=n[1];return(0,F.jsx)(M.Z,{sx:{minWidth:120},children:(0,F.jsxs)(Z.Z,{fullWidth:!0,children:[t||(t=(0,F.jsx)(T.Z,{id:"demo-simple-select-label",children:"Age"})),(0,F.jsxs)(w.Z,{labelId:"demo-simple-select-label",id:"demo-simple-select",value:a,label:"Age",onChange:function(e){i(e.target.value)},children:[l||(l=(0,F.jsx)(j.Z,{value:10,children:"Ten"})),s||(s=(0,F.jsx)(j.Z,{value:20,children:"Twenty"})),o||(o=(0,F.jsx)(j.Z,{value:30,children:"Thirty"}))]})]})})},"./SelectAutoWidth.js":function(){var e=I.useState(""),n=(0,C.Z)(e,2),a=n[0],t=n[1];return(0,F.jsx)("div",{children:(0,F.jsxs)(Z.Z,{sx:{m:1,minWidth:80},children:[i||(i=(0,F.jsx)(T.Z,{id:"demo-simple-select-autowidth-label",children:"Age"})),(0,F.jsxs)(w.Z,{labelId:"demo-simple-select-autowidth-label",id:"demo-simple-select-autowidth",value:a,onChange:function(e){t(e.target.value)},autoWidth:!0,label:"Age",children:[r||(r=(0,F.jsx)(j.Z,{value:"",children:(0,F.jsx)("em",{children:"None"})})),c||(c=(0,F.jsx)(j.Z,{value:10,children:"Twenty"})),p||(p=(0,F.jsx)(j.Z,{value:21,children:"Twenty one"})),u||(u=(0,F.jsx)(j.Z,{value:22,children:"Twenty one and a half"}))]})]})})},"./SelectVariants.js":function(){var e=I.useState(""),n=(0,C.Z)(e,2),a=n[0],t=n[1],l=function(e){t(e.target.value)};return(0,F.jsxs)("div",{children:[(0,F.jsxs)(Z.Z,{variant:"standard",sx:{m:1,minWidth:120},children:[m||(m=(0,F.jsx)(T.Z,{id:"demo-simple-select-standard-label",children:"Age"})),(0,F.jsxs)(w.Z,{labelId:"demo-simple-select-standard-label",id:"demo-simple-select-standard",value:a,onChange:l,label:"Age",children:[d||(d=(0,F.jsx)(j.Z,{value:"",children:(0,F.jsx)("em",{children:"None"})})),h||(h=(0,F.jsx)(j.Z,{value:10,children:"Ten"})),v||(v=(0,F.jsx)(j.Z,{value:20,children:"Twenty"})),g||(g=(0,F.jsx)(j.Z,{value:30,children:"Thirty"}))]})]}),(0,F.jsxs)(Z.Z,{variant:"filled",sx:{m:1,minWidth:120},children:[b||(b=(0,F.jsx)(T.Z,{id:"demo-simple-select-filled-label",children:"Age"})),(0,F.jsxs)(w.Z,{labelId:"demo-simple-select-filled-label",id:"demo-simple-select-filled",value:a,onChange:l,children:[k||(k=(0,F.jsx)(j.Z,{value:"",children:(0,F.jsx)("em",{children:"None"})})),f||(f=(0,F.jsx)(j.Z,{value:10,children:"Ten"})),x||(x=(0,F.jsx)(j.Z,{value:20,children:"Twenty"})),y||(y=(0,F.jsx)(j.Z,{value:30,children:"Thirty"}))]})]})]})},"./SelectOtherProps.js":function(){var e=I.useState(""),n=(0,C.Z)(e,2),a=n[0],t=n[1],l=function(e){t(e.target.value)};return(0,F.jsxs)("div",{children:[(0,F.jsxs)(Z.Z,{sx:{m:1,minWidth:120},disabled:!0,children:[A||(A=(0,F.jsx)(T.Z,{id:"demo-simple-select-disabled-label",children:"Age"})),(0,F.jsxs)(w.Z,{labelId:"demo-simple-select-disabled-label",id:"demo-simple-select-disabled",value:a,label:"Age",onChange:l,children:[N||(N=(0,F.jsx)(j.Z,{value:"",children:(0,F.jsx)("em",{children:"None"})})),L||(L=(0,F.jsx)(j.Z,{value:10,children:"Ten"})),P||(P=(0,F.jsx)(j.Z,{value:20,children:"Twenty"})),O||(O=(0,F.jsx)(j.Z,{value:30,children:"Thirty"}))]}),W||(W=(0,F.jsx)(ne.Z,{children:"Disabled"}))]}),(0,F.jsxs)(Z.Z,{sx:{m:1,minWidth:120},error:!0,children:[R||(R=(0,F.jsx)(T.Z,{id:"demo-simple-select-error-label",children:"Age"})),(0,F.jsxs)(w.Z,{labelId:"demo-simple-select-error-label",id:"demo-simple-select-error",value:a,label:"Age",onChange:l,renderValue:function(e){return"\u26a0\ufe0f  - ".concat(e)},children:[H||(H=(0,F.jsx)(j.Z,{value:"",children:(0,F.jsx)("em",{children:"None"})})),B||(B=(0,F.jsx)(j.Z,{value:10,children:"Ten"})),z||(z=(0,F.jsx)(j.Z,{value:20,children:"Twenty"})),D||(D=(0,F.jsx)(j.Z,{value:30,children:"Thirty"}))]}),E||(E=(0,F.jsx)(ne.Z,{children:"Error"}))]}),(0,F.jsxs)(Z.Z,{sx:{m:1,minWidth:120},children:[q||(q=(0,F.jsx)(T.Z,{id:"demo-simple-select-readonly-label",children:"Age"})),(0,F.jsxs)(w.Z,{labelId:"demo-simple-select-readonly-label",id:"demo-simple-select-readonly",value:a,label:"Age",onChange:l,inputProps:{readOnly:!0},children:[V||(V=(0,F.jsx)(j.Z,{value:"",children:(0,F.jsx)("em",{children:"None"})})),G||(G=(0,F.jsx)(j.Z,{value:10,children:"Ten"})),_||(_=(0,F.jsx)(j.Z,{value:20,children:"Twenty"})),K||(K=(0,F.jsx)(j.Z,{value:30,children:"Thirty"}))]}),U||(U=(0,F.jsx)(ne.Z,{children:"Read only"}))]}),(0,F.jsxs)(Z.Z,{required:!0,sx:{m:1,minWidth:120},children:[Y||(Y=(0,F.jsx)(T.Z,{id:"demo-simple-select-required-label",children:"Age"})),(0,F.jsxs)(w.Z,{labelId:"demo-simple-select-required-label",id:"demo-simple-select-required",value:a,label:"Age *",onChange:l,children:[$||($=(0,F.jsx)(j.Z,{value:"",children:(0,F.jsx)("em",{children:"None"})})),X||(X=(0,F.jsx)(j.Z,{value:10,children:"Ten"})),J||(J=(0,F.jsx)(j.Z,{value:20,children:"Twenty"})),Q||(Q=(0,F.jsx)(j.Z,{value:30,children:"Thirty"}))]}),ee||(ee=(0,F.jsx)(ne.Z,{children:"Required"}))]})]})},"./NativeSelect.js":function(){return(0,F.jsx)(M.Z,{sx:{minWidth:120},children:(0,F.jsxs)(Z.Z,{fullWidth:!0,children:[be||(be=(0,F.jsx)(T.Z,{variant:"standard",htmlFor:"uncontrolled-native",children:"Age"})),(0,F.jsxs)(Ne,{defaultValue:30,inputProps:{name:"age",id:"uncontrolled-native"},children:[ke||(ke=(0,F.jsx)("option",{value:10,children:"Ten"})),fe||(fe=(0,F.jsx)("option",{value:20,children:"Twenty"})),xe||(xe=(0,F.jsx)("option",{value:30,children:"Thirty"}))]})]})})},"./SelectLabels.js":function(){var e=I.useState(""),n=(0,C.Z)(e,2),a=n[0],t=n[1],l=function(e){t(e.target.value)};return(0,F.jsxs)("div",{children:[(0,F.jsxs)(Z.Z,{sx:{m:1,minWidth:120},children:[ye||(ye=(0,F.jsx)(T.Z,{id:"demo-simple-select-helper-label",children:"Age"})),(0,F.jsxs)(w.Z,{labelId:"demo-simple-select-helper-label",id:"demo-simple-select-helper",value:a,label:"Age",onChange:l,children:[Ie||(Ie=(0,F.jsx)(j.Z,{value:"",children:(0,F.jsx)("em",{children:"None"})})),Se||(Se=(0,F.jsx)(j.Z,{value:10,children:"Ten"})),Ce||(Ce=(0,F.jsx)(j.Z,{value:20,children:"Twenty"})),Me||(Me=(0,F.jsx)(j.Z,{value:30,children:"Thirty"}))]}),Te||(Te=(0,F.jsx)(ne.Z,{children:"With label + helper text"}))]}),(0,F.jsxs)(Z.Z,{sx:{m:1,minWidth:120},children:[(0,F.jsxs)(w.Z,{value:a,onChange:l,displayEmpty:!0,inputProps:{"aria-label":"Without label"},children:[je||(je=(0,F.jsx)(j.Z,{value:"",children:(0,F.jsx)("em",{children:"None"})})),Ze||(Ze=(0,F.jsx)(j.Z,{value:10,children:"Ten"})),we||(we=(0,F.jsx)(j.Z,{value:20,children:"Twenty"})),Fe||(Fe=(0,F.jsx)(j.Z,{value:30,children:"Thirty"}))]}),Ae||(Ae=(0,F.jsx)(ne.Z,{children:"Without label"}))]})]})},"./CustomizedSelects.js":function(){var e=I.useState(""),n=(0,C.Z)(e,2),a=n[0],t=n[1],l=function(e){t(e.target.value)};return(0,F.jsxs)("div",{children:[(0,F.jsxs)(Z.Z,{sx:{m:1},variant:"standard",children:[Le||(Le=(0,F.jsx)(T.Z,{htmlFor:"demo-customized-textbox",children:"Age"})),Pe||(Pe=(0,F.jsx)(en,{id:"demo-customized-textbox"}))]}),(0,F.jsxs)(Z.Z,{sx:{m:1},variant:"standard",children:[Oe||(Oe=(0,F.jsx)(T.Z,{id:"demo-customized-select-label",children:"Age"})),(0,F.jsxs)(w.Z,{labelId:"demo-customized-select-label",id:"demo-customized-select",value:a,onChange:l,input:We||(We=(0,F.jsx)(en,{})),children:[Re||(Re=(0,F.jsx)(j.Z,{value:"",children:(0,F.jsx)("em",{children:"None"})})),He||(He=(0,F.jsx)(j.Z,{value:10,children:"Ten"})),Be||(Be=(0,F.jsx)(j.Z,{value:20,children:"Twenty"})),ze||(ze=(0,F.jsx)(j.Z,{value:30,children:"Thirty"}))]})]}),(0,F.jsxs)(Z.Z,{sx:{m:1},variant:"standard",children:[De||(De=(0,F.jsx)(T.Z,{htmlFor:"demo-customized-select-native",children:"Age"})),(0,F.jsxs)(Ne,{id:"demo-customized-select-native",value:a,onChange:l,input:Ee||(Ee=(0,F.jsx)(en,{})),children:[qe||(qe=(0,F.jsx)("option",{"aria-label":"None",value:""})),Ve||(Ve=(0,F.jsx)("option",{value:10,children:"Ten"})),Ge||(Ge=(0,F.jsx)("option",{value:20,children:"Twenty"})),_e||(_e=(0,F.jsx)("option",{value:30,children:"Thirty"}))]})]})]})},"./SelectSmall.js":function(){var e=I.useState(""),n=(0,C.Z)(e,2),a=n[0],t=n[1];return(0,F.jsxs)(Z.Z,{sx:{m:1,minWidth:120},size:"small",children:[Ke||(Ke=(0,F.jsx)(T.Z,{id:"demo-select-small",children:"Age"})),(0,F.jsxs)(w.Z,{labelId:"demo-select-small",id:"demo-select-small",value:a,label:"Age",onChange:function(e){t(e.target.value)},children:[Ue||(Ue=(0,F.jsx)(j.Z,{value:"",children:(0,F.jsx)("em",{children:"None"})})),Ye||(Ye=(0,F.jsx)(j.Z,{value:10,children:"Ten"})),$e||($e=(0,F.jsx)(j.Z,{value:20,children:"Twenty"})),Xe||(Xe=(0,F.jsx)(j.Z,{value:30,children:"Thirty"}))]})]})},"./MultipleSelect.js":function(){var e=(0,tn.Z)(),n=I.useState([]),a=(0,C.Z)(n,2),t=a[0],l=a[1];return(0,F.jsx)("div",{children:(0,F.jsxs)(Z.Z,{sx:{m:1,width:300},children:[nn||(nn=(0,F.jsx)(T.Z,{id:"demo-multiple-name-label",children:"Name"})),(0,F.jsx)(w.Z,{labelId:"demo-multiple-name-label",id:"demo-multiple-name",multiple:!0,value:t,onChange:function(e){var n=e.target.value;l("string"===typeof n?n.split(","):n)},input:an||(an=(0,F.jsx)(ln.Z,{label:"Name"})),MenuProps:sn,children:on.map((function(n){return(0,F.jsx)(j.Z,{value:n,style:rn(n,t,e),children:n},n)}))})]})})},"./MultipleSelectCheckmarks.js":function(){var e=I.useState([]),n=(0,C.Z)(e,2),a=n[0],t=n[1];return(0,F.jsx)("div",{children:(0,F.jsxs)(Z.Z,{sx:{m:1,width:300},children:[cn||(cn=(0,F.jsx)(T.Z,{id:"demo-multiple-checkbox-label",children:"Tag"})),(0,F.jsx)(w.Z,{labelId:"demo-multiple-checkbox-label",id:"demo-multiple-checkbox",multiple:!0,value:a,onChange:function(e){var n=e.target.value;t("string"===typeof n?n.split(","):n)},input:pn||(pn=(0,F.jsx)(ln.Z,{label:"Tag"})),renderValue:function(e){return e.join(", ")},MenuProps:dn,children:hn.map((function(e){return(0,F.jsxs)(j.Z,{value:e,children:[(0,F.jsx)(mn.Z,{checked:a.indexOf(e)>-1}),(0,F.jsx)(un.Z,{primary:e})]},e)}))})]})})},"./MultipleSelectChip.js":function(){var e=(0,tn.Z)(),n=I.useState([]),a=(0,C.Z)(n,2),t=a[0],l=a[1];return(0,F.jsx)("div",{children:(0,F.jsxs)(Z.Z,{sx:{m:1,width:300},children:[vn||(vn=(0,F.jsx)(T.Z,{id:"demo-multiple-chip-label",children:"Chip"})),(0,F.jsx)(w.Z,{labelId:"demo-multiple-chip-label",id:"demo-multiple-chip",multiple:!0,value:t,onChange:function(e){var n=e.target.value;l("string"===typeof n?n.split(","):n)},input:gn||(gn=(0,F.jsx)(ln.Z,{id:"select-multiple-chip",label:"Chip"})),renderValue:function(e){return(0,F.jsx)(M.Z,{sx:{display:"flex",flexWrap:"wrap",gap:.5},children:e.map((function(e){return(0,F.jsx)(bn.Z,{label:e},e)}))})},MenuProps:kn,children:fn.map((function(n){return(0,F.jsx)(j.Z,{value:n,style:xn(n,t,e),children:n},n)}))})]})})},"./ControlledOpenSelect.js":function(){var e=I.useState(""),n=(0,C.Z)(e,2),a=n[0],t=n[1],l=I.useState(!1),s=(0,C.Z)(l,2),o=s[0],i=s[1],r=function(){i(!0)};return(0,F.jsxs)("div",{children:[(0,F.jsx)(jn.Z,{sx:{display:"block",mt:2},onClick:r,children:"Open the select"}),(0,F.jsxs)(Z.Z,{sx:{m:1,minWidth:120},children:[yn||(yn=(0,F.jsx)(T.Z,{id:"demo-controlled-open-select-label",children:"Age"})),(0,F.jsxs)(w.Z,{labelId:"demo-controlled-open-select-label",id:"demo-controlled-open-select",open:o,onClose:function(){i(!1)},onOpen:r,value:a,label:"Age",onChange:function(e){t(e.target.value)},children:[In||(In=(0,F.jsx)(j.Z,{value:"",children:(0,F.jsx)("em",{children:"None"})})),Sn||(Sn=(0,F.jsx)(j.Z,{value:10,children:"Ten"})),Cn||(Cn=(0,F.jsx)(j.Z,{value:20,children:"Twenty"})),Mn||(Mn=(0,F.jsx)(j.Z,{value:30,children:"Thirty"}))]})]})]})},"./MultipleSelectNative.js":function(){var e=I.useState([]),n=(0,C.Z)(e,2),a=n[0],t=n[1];return(0,F.jsx)("div",{children:(0,F.jsxs)(Z.Z,{sx:{m:1,minWidth:120,maxWidth:300},children:[Tn||(Tn=(0,F.jsx)(T.Z,{shrink:!0,htmlFor:"select-multiple-native",children:"Native"})),(0,F.jsx)(w.Z,{multiple:!0,native:!0,value:a,onChange:function(e){for(var n=e.target.options,a=[],l=0,s=n.length;l<s;l+=1)n[l].selected&&a.push(n[l].value);t(a)},label:"Native",inputProps:{id:"select-multiple-native"},children:Zn.map((function(e){return(0,F.jsx)("option",{value:e,children:e},e)}))})]})})},"./GroupedSelect.js":function(){return(0,F.jsxs)("div",{children:[(0,F.jsxs)(Z.Z,{sx:{m:1,minWidth:120},children:[wn||(wn=(0,F.jsx)(T.Z,{htmlFor:"grouped-native-select",children:"Grouping"})),Fn||(Fn=(0,F.jsxs)(w.Z,{native:!0,defaultValue:"",id:"grouped-native-select",label:"Grouping",children:[(0,F.jsx)("option",{"aria-label":"None",value:""}),(0,F.jsxs)("optgroup",{label:"Category 1",children:[(0,F.jsx)("option",{value:1,children:"Option 1"}),(0,F.jsx)("option",{value:2,children:"Option 2"})]}),(0,F.jsxs)("optgroup",{label:"Category 2",children:[(0,F.jsx)("option",{value:3,children:"Option 3"}),(0,F.jsx)("option",{value:4,children:"Option 4"})]})]}))]}),(0,F.jsxs)(Z.Z,{sx:{m:1,minWidth:120},children:[An||(An=(0,F.jsx)(T.Z,{htmlFor:"grouped-select",children:"Grouping"})),Nn||(Nn=(0,F.jsxs)(w.Z,{defaultValue:"",id:"grouped-select",label:"Grouping",children:[(0,F.jsx)(j.Z,{value:"",children:(0,F.jsx)("em",{children:"None"})}),(0,F.jsx)(Ln.Z,{children:"Category 1"}),(0,F.jsx)(j.Z,{value:1,children:"Option 1"}),(0,F.jsx)(j.Z,{value:2,children:"Option 2"}),(0,F.jsx)(Ln.Z,{children:"Category 2"}),(0,F.jsx)(j.Z,{value:3,children:"Option 3"}),(0,F.jsx)(j.Z,{value:4,children:"Option 4"})]}))]})]})},"./DialogSelect.js":function(){var e=I.useState(!1),n=(0,C.Z)(e,2),a=n[0],t=n[1],l=I.useState(""),s=(0,C.Z)(l,2),o=s[0],i=s[1],r=function(e){i(Number(e.target.value)||"")},c=function(e,n){"backdropClick"!==n&&t(!1)};return(0,F.jsxs)("div",{children:[(0,F.jsx)(jn.Z,{onClick:function(){t(!0)},children:"Open select dialog"}),(0,F.jsxs)($n.Z,{disableEscapeKeyDown:!0,open:a,onClose:c,children:[Pn||(Pn=(0,F.jsx)(Qn.Z,{children:"Fill the form"})),(0,F.jsx)(Jn.Z,{children:(0,F.jsxs)(M.Z,{component:"form",sx:{display:"flex",flexWrap:"wrap"},children:[(0,F.jsxs)(Z.Z,{sx:{m:1,minWidth:120},children:[On||(On=(0,F.jsx)(T.Z,{htmlFor:"demo-dialog-native",children:"Age"})),(0,F.jsxs)(w.Z,{native:!0,value:o,onChange:r,input:Wn||(Wn=(0,F.jsx)(ln.Z,{label:"Age",id:"demo-dialog-native"})),children:[Rn||(Rn=(0,F.jsx)("option",{"aria-label":"None",value:""})),Hn||(Hn=(0,F.jsx)("option",{value:10,children:"Ten"})),Bn||(Bn=(0,F.jsx)("option",{value:20,children:"Twenty"})),zn||(zn=(0,F.jsx)("option",{value:30,children:"Thirty"}))]})]}),(0,F.jsxs)(Z.Z,{sx:{m:1,minWidth:120},children:[Dn||(Dn=(0,F.jsx)(T.Z,{id:"demo-dialog-select-label",children:"Age"})),(0,F.jsxs)(w.Z,{labelId:"demo-dialog-select-label",id:"demo-dialog-select",value:o,onChange:r,input:En||(En=(0,F.jsx)(ln.Z,{label:"Age"})),children:[qn||(qn=(0,F.jsx)(j.Z,{value:"",children:(0,F.jsx)("em",{children:"None"})})),Vn||(Vn=(0,F.jsx)(j.Z,{value:10,children:"Ten"})),Gn||(Gn=(0,F.jsx)(j.Z,{value:20,children:"Twenty"})),_n||(_n=(0,F.jsx)(j.Z,{value:30,children:"Thirty"}))]})]})]})}),(0,F.jsxs)(Xn.Z,{children:[(0,F.jsx)(jn.Z,{onClick:c,children:"Cancel"}),(0,F.jsx)(jn.Z,{onClick:c,children:"Ok"})]})]})]})},"./MultipleSelectPlaceholder.js":function(){var e=(0,tn.Z)(),n=I.useState([]),a=(0,C.Z)(n,2),t=a[0],l=a[1];return(0,F.jsx)("div",{children:(0,F.jsx)(Z.Z,{sx:{m:1,width:300,mt:3},children:(0,F.jsxs)(w.Z,{multiple:!0,displayEmpty:!0,value:t,onChange:function(e){var n=e.target.value;l("string"===typeof n?n.split(","):n)},input:Kn||(Kn=(0,F.jsx)(ln.Z,{})),renderValue:function(e){return 0===e.length?Un||(Un=(0,F.jsx)("em",{children:"Placeholder"})):e.join(", ")},MenuProps:ea,inputProps:{"aria-label":"Without label"},children:[Yn||(Yn=(0,F.jsx)(j.Z,{disabled:!0,value:"",children:(0,F.jsx)("em",{children:"Placeholder"})})),na.map((function(n){return(0,F.jsx)(j.Z,{value:n,style:aa(n,t,e),children:n},n)}))]})})})}};function ia(){return ta||(ta=(0,F.jsx)(S.Z,{demos:sa,docs:la,demoComponents:oa}))}},486193:function(e,n,a){"use strict";a.d(n,{Z:function(){return j}});var t=a(481936),l=a(957379),s=a(295649),o=a(827378),i=a(138944),r=a(501330),c=a(240120),p=a(481371),u=a(403503),m=a(824246),d=(0,u.Z)((0,m.jsx)("path",{d:"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"}),"CheckBoxOutlineBlank"),h=(0,u.Z)((0,m.jsx)("path",{d:"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"}),"CheckBox"),v=(0,u.Z)((0,m.jsx)("path",{d:"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"}),"IndeterminateCheckBox"),g=a(326162),b=a(906205),k=a(290763),f=a(618932);function x(e){return(0,f.Z)("MuiCheckbox",e)}var y=(0,a(761424).Z)("MuiCheckbox",["root","checked","disabled","indeterminate","colorPrimary","colorSecondary"]),I=["checkedIcon","color","icon","indeterminate","indeterminateIcon","inputProps","size","className"],S=(0,k.ZP)(p.Z,{shouldForwardProp:function(e){return(0,k.FO)(e)||"classes"===e},name:"MuiCheckbox",slot:"Root",overridesResolver:function(e,n){var a=e.ownerState;return[n.root,a.indeterminate&&n.indeterminate,"default"!==a.color&&n["color".concat((0,g.Z)(a.color))]]}})((function(e){var n,a=e.theme,t=e.ownerState;return(0,s.Z)((0,s.Z)({color:(a.vars||a).palette.text.secondary},!t.disableRipple&&{"&:hover":{backgroundColor:a.vars?"rgba(".concat("default"===t.color?a.vars.palette.action.activeChannel:a.vars.palette.primary.mainChannel," / ").concat(a.vars.palette.action.hoverOpacity,")"):(0,c.Fq)("default"===t.color?a.palette.action.active:a.palette[t.color].main,a.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}}),"default"!==t.color&&(n={},(0,l.Z)(n,"&.".concat(y.checked,", &.").concat(y.indeterminate),{color:(a.vars||a).palette[t.color].main}),(0,l.Z)(n,"&.".concat(y.disabled),{color:(a.vars||a).palette.action.disabled}),n))})),C=(0,m.jsx)(h,{}),M=(0,m.jsx)(d,{}),T=(0,m.jsx)(v,{}),j=o.forwardRef((function(e,n){var a,l,c=(0,b.Z)({props:e,name:"MuiCheckbox"}),p=c.checkedIcon,u=void 0===p?C:p,d=c.color,h=void 0===d?"primary":d,v=c.icon,k=void 0===v?M:v,f=c.indeterminate,y=void 0!==f&&f,j=c.indeterminateIcon,Z=void 0===j?T:j,w=c.inputProps,F=c.size,A=void 0===F?"medium":F,N=c.className,L=(0,t.Z)(c,I),P=y?Z:k,O=y?Z:u,W=(0,s.Z)((0,s.Z)({},c),{},{color:h,indeterminate:y,size:A}),R=function(e){var n=e.classes,a=e.indeterminate,t=e.color,l={root:["root",a&&"indeterminate","color".concat((0,g.Z)(t))]},o=(0,r.Z)(l,x,n);return(0,s.Z)((0,s.Z)({},n),o)}(W);return(0,m.jsx)(S,(0,s.Z)((0,s.Z)({type:"checkbox",inputProps:(0,s.Z)({"data-indeterminate":y},w),icon:o.cloneElement(P,{fontSize:null!==(a=P.props.fontSize)&&void 0!==a?a:A}),checkedIcon:o.cloneElement(O,{fontSize:null!==(l=O.props.fontSize)&&void 0!==l?l:A}),ownerState:W,ref:n,className:(0,i.default)(R.root,N)},L),{},{classes:R}))}))},478768:function(e,n,a){"use strict";a.d(n,{Z:function(){return Z}});var t=a(481936),l=a(957379),s=a(295649),o=a(827378),i=a(138944),r=a(501330),c=a(549303),p=a(326162),u=a(159420),m=a(844244),d=a(709497),h=a(906205),v=a(290763),g=a(618932);function b(e){return(0,g.Z)("MuiDialog",e)}var k=(0,a(761424).Z)("MuiDialog",["root","scrollPaper","scrollBody","container","paper","paperScrollPaper","paperScrollBody","paperWidthFalse","paperWidthXs","paperWidthSm","paperWidthMd","paperWidthLg","paperWidthXl","paperFullWidth","paperFullScreen"]),f=a(30037),x=a(637919),y=a(146010),I=a(824246),S=["aria-describedby","aria-labelledby","BackdropComponent","BackdropProps","children","className","disableEscapeKeyDown","fullScreen","fullWidth","maxWidth","onBackdropClick","onClose","open","PaperComponent","PaperProps","scroll","TransitionComponent","transitionDuration","TransitionProps"],C=(0,v.ZP)(x.Z,{name:"MuiDialog",slot:"Backdrop",overrides:function(e,n){return n.backdrop}})({zIndex:-1}),M=(0,v.ZP)(u.Z,{name:"MuiDialog",slot:"Root",overridesResolver:function(e,n){return n.root}})({"@media print":{position:"absolute !important"}}),T=(0,v.ZP)("div",{name:"MuiDialog",slot:"Container",overridesResolver:function(e,n){var a=e.ownerState;return[n.container,n["scroll".concat((0,p.Z)(a.scroll))]]}})((function(e){var n=e.ownerState;return(0,s.Z)((0,s.Z)({height:"100%","@media print":{height:"auto"},outline:0},"paper"===n.scroll&&{display:"flex",justifyContent:"center",alignItems:"center"}),"body"===n.scroll&&{overflowY:"auto",overflowX:"hidden",textAlign:"center","&:after":{content:'""',display:"inline-block",verticalAlign:"middle",height:"100%",width:"0"}})})),j=(0,v.ZP)(d.Z,{name:"MuiDialog",slot:"Paper",overridesResolver:function(e,n){var a=e.ownerState;return[n.paper,n["scrollPaper".concat((0,p.Z)(a.scroll))],n["paperWidth".concat((0,p.Z)(String(a.maxWidth)))],a.fullWidth&&n.paperFullWidth,a.fullScreen&&n.paperFullScreen]}})((function(e){var n=e.theme,a=e.ownerState;return(0,s.Z)((0,s.Z)((0,s.Z)((0,s.Z)((0,s.Z)((0,s.Z)((0,s.Z)({margin:32,position:"relative",overflowY:"auto","@media print":{overflowY:"visible",boxShadow:"none"}},"paper"===a.scroll&&{display:"flex",flexDirection:"column",maxHeight:"calc(100% - 64px)"}),"body"===a.scroll&&{display:"inline-block",verticalAlign:"middle",textAlign:"left"}),!a.maxWidth&&{maxWidth:"calc(100% - 64px)"}),"xs"===a.maxWidth&&(0,l.Z)({maxWidth:"px"===n.breakpoints.unit?Math.max(n.breakpoints.values.xs,444):"".concat(n.breakpoints.values.xs).concat(n.breakpoints.unit)},"&.".concat(k.paperScrollBody),(0,l.Z)({},n.breakpoints.down(Math.max(n.breakpoints.values.xs,444)+64),{maxWidth:"calc(100% - 64px)"}))),a.maxWidth&&"xs"!==a.maxWidth&&(0,l.Z)({maxWidth:"".concat(n.breakpoints.values[a.maxWidth]).concat(n.breakpoints.unit)},"&.".concat(k.paperScrollBody),(0,l.Z)({},n.breakpoints.down(n.breakpoints.values[a.maxWidth]+64),{maxWidth:"calc(100% - 64px)"}))),a.fullWidth&&{width:"calc(100% - 64px)"}),a.fullScreen&&(0,l.Z)({margin:0,width:"100%",maxWidth:"100%",height:"100%",maxHeight:"none",borderRadius:0},"&.".concat(k.paperScrollBody),{margin:0,maxWidth:"100%"}))})),Z=o.forwardRef((function(e,n){var a=(0,h.Z)({props:e,name:"MuiDialog"}),l=(0,y.Z)(),u={enter:l.transitions.duration.enteringScreen,exit:l.transitions.duration.leavingScreen},v=a["aria-describedby"],g=a["aria-labelledby"],k=a.BackdropComponent,x=a.BackdropProps,Z=a.children,w=a.className,F=a.disableEscapeKeyDown,A=void 0!==F&&F,N=a.fullScreen,L=void 0!==N&&N,P=a.fullWidth,O=void 0!==P&&P,W=a.maxWidth,R=void 0===W?"sm":W,H=a.onBackdropClick,B=a.onClose,z=a.open,D=a.PaperComponent,E=void 0===D?d.Z:D,q=a.PaperProps,V=void 0===q?{}:q,G=a.scroll,_=void 0===G?"paper":G,K=a.TransitionComponent,U=void 0===K?m.Z:K,Y=a.transitionDuration,$=void 0===Y?u:Y,X=a.TransitionProps,J=(0,t.Z)(a,S),Q=(0,s.Z)((0,s.Z)({},a),{},{disableEscapeKeyDown:A,fullScreen:L,fullWidth:O,maxWidth:R,scroll:_}),ee=function(e){var n=e.classes,a=e.scroll,t=e.maxWidth,l=e.fullWidth,s=e.fullScreen,o={root:["root"],container:["container","scroll".concat((0,p.Z)(a))],paper:["paper","paperScroll".concat((0,p.Z)(a)),"paperWidth".concat((0,p.Z)(String(t))),l&&"paperFullWidth",s&&"paperFullScreen"]};return(0,r.Z)(o,b,n)}(Q),ne=o.useRef(),ae=(0,c.Z)(g),te=o.useMemo((function(){return{titleId:ae}}),[ae]);return(0,I.jsx)(M,(0,s.Z)((0,s.Z)({className:(0,i.default)(ee.root,w),closeAfterTransition:!0,components:{Backdrop:C},componentsProps:{backdrop:(0,s.Z)({transitionDuration:$,as:k},x)},disableEscapeKeyDown:A,onClose:B,open:z,ref:n,onClick:function(e){ne.current&&(ne.current=null,H&&H(e),B&&B(e,"backdropClick"))},ownerState:Q},J),{},{children:(0,I.jsx)(U,(0,s.Z)((0,s.Z)({appear:!0,in:z,timeout:$,role:"presentation"},X),{},{children:(0,I.jsx)(T,{className:(0,i.default)(ee.container),onMouseDown:function(e){ne.current=e.target===e.currentTarget},ownerState:Q,children:(0,I.jsx)(j,(0,s.Z)((0,s.Z)({as:E,elevation:24,role:"dialog","aria-describedby":v,"aria-labelledby":ae},V),{},{className:(0,i.default)(ee.paper,V.className),ownerState:Q,children:(0,I.jsx)(f.Z.Provider,{value:te,children:Z})}))})}))}))}))},30037:function(e,n,a){"use strict";var t=(0,a(827378).createContext)({});n.Z=t},584567:function(e,n,a){"use strict";a.d(n,{Z:function(){return b}});var t=a(481936),l=a(957379),s=a(295649),o=a(827378),i=a(138944),r=a(501330),c=a(290763),p=a(906205),u=a(618932);function m(e){return(0,u.Z)("MuiDialogContent",e)}(0,a(761424).Z)("MuiDialogContent",["root","dividers"]);var d=a(103362),h=a(824246),v=["className","dividers"],g=(0,c.ZP)("div",{name:"MuiDialogContent",slot:"Root",overridesResolver:function(e,n){var a=e.ownerState;return[n.root,a.dividers&&n.dividers]}})((function(e){var n=e.theme,a=e.ownerState;return(0,s.Z)({flex:"1 1 auto",WebkitOverflowScrolling:"touch",overflowY:"auto",padding:"20px 24px"},a.dividers?{padding:"16px 24px",borderTop:"1px solid ".concat((n.vars||n).palette.divider),borderBottom:"1px solid ".concat((n.vars||n).palette.divider)}:(0,l.Z)({},".".concat(d.Z.root," + &"),{paddingTop:0}))})),b=o.forwardRef((function(e,n){var a=(0,p.Z)({props:e,name:"MuiDialogContent"}),l=a.className,o=a.dividers,c=void 0!==o&&o,u=(0,t.Z)(a,v),d=(0,s.Z)((0,s.Z)({},a),{},{dividers:c}),b=function(e){var n=e.classes,a={root:["root",e.dividers&&"dividers"]};return(0,r.Z)(a,m,n)}(d);return(0,h.jsx)(g,(0,s.Z)({className:(0,i.default)(b.root,l),ownerState:d,ref:n},u))}))},470126:function(e,n,a){"use strict";var t=a(295649),l=a(481936),s=a(827378),o=a(138944),i=a(501330),r=a(376811),c=a(290763),p=a(906205),u=a(103362),m=a(30037),d=a(824246),h=["className","id"],v=(0,c.ZP)(r.Z,{name:"MuiDialogTitle",slot:"Root",overridesResolver:function(e,n){return n.root}})({padding:"16px 24px",flex:"0 0 auto"}),g=s.forwardRef((function(e,n){var a=(0,p.Z)({props:e,name:"MuiDialogTitle"}),r=a.className,c=a.id,g=(0,l.Z)(a,h),b=a,k=function(e){var n=e.classes;return(0,i.Z)({root:["root"]},u.a,n)}(b),f=s.useContext(m.Z).titleId,x=void 0===f?c:f;return(0,d.jsx)(v,(0,t.Z)({component:"h2",className:(0,o.default)(k.root,r),ownerState:b,ref:n,variant:"h6",id:x},g))}));n.Z=g},103362:function(e,n,a){"use strict";a.d(n,{a:function(){return l}});var t=a(618932);function l(e){return(0,t.Z)("MuiDialogTitle",e)}var s=(0,a(761424).Z)("MuiDialogTitle",["root"]);n.Z=s},205370:function(e,n,a){"use strict";var t=a(481936),l=a(295649),s=a(957379),o=a(827378),i=a(138944),r=a(501330),c=a(376811),p=a(980283),u=a(906205),m=a(290763),d=a(506151),h=a(824246),v=["children","className","disableTypography","inset","primary","primaryTypographyProps","secondary","secondaryTypographyProps"],g=(0,m.ZP)("div",{name:"MuiListItemText",slot:"Root",overridesResolver:function(e,n){var a=e.ownerState;return[(0,s.Z)({},"& .".concat(d.Z.primary),n.primary),(0,s.Z)({},"& .".concat(d.Z.secondary),n.secondary),n.root,a.inset&&n.inset,a.primary&&a.secondary&&n.multiline,a.dense&&n.dense]}})((function(e){var n=e.ownerState;return(0,l.Z)((0,l.Z)({flex:"1 1 auto",minWidth:0,marginTop:4,marginBottom:4},n.primary&&n.secondary&&{marginTop:6,marginBottom:6}),n.inset&&{paddingLeft:56})})),b=o.forwardRef((function(e,n){var a=(0,u.Z)({props:e,name:"MuiListItemText"}),s=a.children,m=a.className,b=a.disableTypography,k=void 0!==b&&b,f=a.inset,x=void 0!==f&&f,y=a.primary,I=a.primaryTypographyProps,S=a.secondary,C=a.secondaryTypographyProps,M=(0,t.Z)(a,v),T=o.useContext(p.Z).dense,j=null!=y?y:s,Z=S,w=(0,l.Z)((0,l.Z)({},a),{},{disableTypography:k,inset:x,primary:!!j,secondary:!!Z,dense:T}),F=function(e){var n=e.classes,a=e.inset,t=e.primary,l=e.secondary,s={root:["root",a&&"inset",e.dense&&"dense",t&&l&&"multiline"],primary:["primary"],secondary:["secondary"]};return(0,r.Z)(s,d.L,n)}(w);return null==j||j.type===c.Z||k||(j=(0,h.jsx)(c.Z,(0,l.Z)((0,l.Z)({variant:T?"body2":"body1",className:F.primary,component:null!==I&&void 0!==I&&I.variant?void 0:"span",display:"block"},I),{},{children:j}))),null==Z||Z.type===c.Z||k||(Z=(0,h.jsx)(c.Z,(0,l.Z)((0,l.Z)({variant:"body2",className:F.secondary,color:"text.secondary",display:"block"},C),{},{children:Z}))),(0,h.jsxs)(g,(0,l.Z)((0,l.Z)({className:(0,i.default)(F.root,m),ownerState:w,ref:n},M),{},{children:[j,Z]}))}));n.Z=b},147646:function(e,n,a){"use strict";a.d(n,{Z:function(){return g}});var t=a(481936),l=a(295649),s=a(827378),o=a(138944),i=a(501330),r=a(290763),c=a(906205),p=a(326162),u=a(618932);function m(e){return(0,u.Z)("MuiListSubheader",e)}(0,a(761424).Z)("MuiListSubheader",["root","colorPrimary","colorInherit","gutters","inset","sticky"]);var d=a(824246),h=["className","color","component","disableGutters","disableSticky","inset"],v=(0,r.ZP)("li",{name:"MuiListSubheader",slot:"Root",overridesResolver:function(e,n){var a=e.ownerState;return[n.root,"default"!==a.color&&n["color".concat((0,p.Z)(a.color))],!a.disableGutters&&n.gutters,a.inset&&n.inset,!a.disableSticky&&n.sticky]}})((function(e){var n=e.theme,a=e.ownerState;return(0,l.Z)((0,l.Z)((0,l.Z)((0,l.Z)((0,l.Z)({boxSizing:"border-box",lineHeight:"48px",listStyle:"none",color:(n.vars||n).palette.text.secondary,fontFamily:n.typography.fontFamily,fontWeight:n.typography.fontWeightMedium,fontSize:n.typography.pxToRem(14)},"primary"===a.color&&{color:(n.vars||n).palette.primary.main}),"inherit"===a.color&&{color:"inherit"}),!a.disableGutters&&{paddingLeft:16,paddingRight:16}),a.inset&&{paddingLeft:72}),!a.disableSticky&&{position:"sticky",top:0,zIndex:1,backgroundColor:(n.vars||n).palette.background.paper})})),g=s.forwardRef((function(e,n){var a=(0,c.Z)({props:e,name:"MuiListSubheader"}),s=a.className,r=a.color,u=void 0===r?"default":r,g=a.component,b=void 0===g?"li":g,k=a.disableGutters,f=void 0!==k&&k,x=a.disableSticky,y=void 0!==x&&x,I=a.inset,S=void 0!==I&&I,C=(0,t.Z)(a,h),M=(0,l.Z)((0,l.Z)({},a),{},{color:u,component:b,disableGutters:f,disableSticky:y,inset:S}),T=function(e){var n=e.classes,a=e.color,t=e.disableGutters,l=e.inset,s=e.disableSticky,o={root:["root","default"!==a&&"color".concat((0,p.Z)(a)),!t&&"gutters",l&&"inset",!s&&"sticky"]};return(0,i.Z)(o,m,n)}(M);return(0,d.jsx)(v,(0,l.Z)({as:b,className:(0,o.default)(T.root,s),ref:n,ownerState:M},C))}))},481371:function(e,n,a){"use strict";a.d(n,{Z:function(){return x}});var t=a(25778),l=a(481936),s=a(295649),o=a(827378),i=a(138944),r=a(501330),c=a(326162),p=a(290763),u=a(781702),m=a(760163),d=a(161980),h=a(618932);function v(e){return(0,h.Z)("PrivateSwitchBase",e)}(0,a(761424).Z)("PrivateSwitchBase",["root","checked","disabled","input","edgeStart","edgeEnd"]);var g=a(824246),b=["autoFocus","checked","checkedIcon","className","defaultChecked","disabled","disableFocusRipple","edge","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value"],k=(0,p.ZP)(d.Z)((function(e){var n=e.ownerState;return(0,s.Z)((0,s.Z)({padding:9,borderRadius:"50%"},"start"===n.edge&&{marginLeft:"small"===n.size?-3:-12}),"end"===n.edge&&{marginRight:"small"===n.size?-3:-12})})),f=(0,p.ZP)("input")({cursor:"inherit",position:"absolute",opacity:0,width:"100%",height:"100%",top:0,left:0,margin:0,padding:0,zIndex:1}),x=o.forwardRef((function(e,n){var a=e.autoFocus,o=e.checked,p=e.checkedIcon,d=e.className,h=e.defaultChecked,x=e.disabled,y=e.disableFocusRipple,I=void 0!==y&&y,S=e.edge,C=void 0!==S&&S,M=e.icon,T=e.id,j=e.inputProps,Z=e.inputRef,w=e.name,F=e.onBlur,A=e.onChange,N=e.onFocus,L=e.readOnly,P=e.required,O=e.tabIndex,W=e.type,R=e.value,H=(0,l.Z)(e,b),B=(0,u.Z)({controlled:o,default:Boolean(h),name:"SwitchBase",state:"checked"}),z=(0,t.Z)(B,2),D=z[0],E=z[1],q=(0,m.Z)(),V=x;q&&"undefined"===typeof V&&(V=q.disabled);var G="checkbox"===W||"radio"===W,_=(0,s.Z)((0,s.Z)({},e),{},{checked:D,disabled:V,disableFocusRipple:I,edge:C}),K=function(e){var n=e.classes,a=e.checked,t=e.disabled,l=e.edge,s={root:["root",a&&"checked",t&&"disabled",l&&"edge".concat((0,c.Z)(l))],input:["input"]};return(0,r.Z)(s,v,n)}(_);return(0,g.jsxs)(k,(0,s.Z)((0,s.Z)({component:"span",className:(0,i.default)(K.root,d),centerRipple:!0,focusRipple:!I,disabled:V,tabIndex:null,role:void 0,onFocus:function(e){N&&N(e),q&&q.onFocus&&q.onFocus(e)},onBlur:function(e){F&&F(e),q&&q.onBlur&&q.onBlur(e)},ownerState:_,ref:n},H),{},{children:[(0,g.jsx)(f,(0,s.Z)((0,s.Z)({autoFocus:a,checked:o,defaultChecked:h,className:K.input,disabled:V,id:G&&T,name:w,onChange:function(e){if(!e.nativeEvent.defaultPrevented){var n=e.target.checked;E(n),A&&A(e,n)}},readOnly:L,ref:Z,required:P,ownerState:_,tabIndex:O,type:W},"checkbox"===W&&void 0===R?{}:{value:R}),j)),D?p:M]}))}))},15214:function(e,n,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/react-select",function(){return a(135493)}])}},function(e){e.O(0,[75760,31194,91642,35408,85992,51588,79125,93899,63978,54328,82744,20365,51990,37637,26035,8726,11486,10552,67414,47093,84445,77756,94616,49774,92888,40179],(function(){return n=15214,e(e.s=n);var n}));var n=e.O();_N_E=n}]);