(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[50678],{774247:function(e,t,o){var n={"./text-field-pt.json":464982,"./text-field-zh.json":837397,"./text-field.json":724128,"docs/translations/api-docs/text-field/text-field-pt.json":464982,"docs/translations/api-docs/text-field/text-field-zh.json":837397,"docs/translations/api-docs/text-field/text-field.json":724128};function i(e){var t=a(e);return o(t)}function a(e){if(!o.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}i.keys=function(){return Object.keys(n)},i.resolve=a,e.exports=i,i.id=774247},211940:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return l}});o(827378);var n=o(888233),i=o(631506),a=JSON.parse('{"props":{"autoComplete":{"type":{"name":"string"}},"autoFocus":{"type":{"name":"bool"}},"classes":{"type":{"name":"object"}},"color":{"type":{"name":"union","description":"\'primary\'<br>&#124;&nbsp;\'secondary\'<br>&#124;&nbsp;\'error\'<br>&#124;&nbsp;\'info\'<br>&#124;&nbsp;\'success\'<br>&#124;&nbsp;\'warning\'<br>&#124;&nbsp;string"},"default":"\'primary\'"},"defaultValue":{"type":{"name":"any"}},"disabled":{"type":{"name":"bool"}},"error":{"type":{"name":"bool"}},"FormHelperTextProps":{"type":{"name":"object"}},"fullWidth":{"type":{"name":"bool"}},"helperText":{"type":{"name":"node"}},"id":{"type":{"name":"string"}},"InputLabelProps":{"type":{"name":"object"}},"inputProps":{"type":{"name":"object"}},"InputProps":{"type":{"name":"object"}},"inputRef":{"type":{"name":"custom","description":"ref"}},"label":{"type":{"name":"node"}},"margin":{"type":{"name":"enum","description":"\'dense\'<br>&#124;&nbsp;\'none\'<br>&#124;&nbsp;\'normal\'"},"default":"\'none\'"},"maxRows":{"type":{"name":"union","description":"number<br>&#124;&nbsp;string"}},"minRows":{"type":{"name":"union","description":"number<br>&#124;&nbsp;string"}},"multiline":{"type":{"name":"bool"}},"name":{"type":{"name":"string"}},"onChange":{"type":{"name":"func"}},"placeholder":{"type":{"name":"string"}},"required":{"type":{"name":"bool"}},"rows":{"type":{"name":"union","description":"number<br>&#124;&nbsp;string"}},"select":{"type":{"name":"bool"}},"SelectProps":{"type":{"name":"object"}},"size":{"type":{"name":"union","description":"\'medium\'<br>&#124;&nbsp;\'small\'<br>&#124;&nbsp;string"}},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"}},"type":{"type":{"name":"string"}},"value":{"type":{"name":"any"}},"variant":{"type":{"name":"enum","description":"\'filled\'<br>&#124;&nbsp;\'outlined\'<br>&#124;&nbsp;\'standard\'"},"default":"\'outlined\'"}},"name":"TextField","styles":{"classes":["root"],"globalClasses":{},"name":"MuiTextField"},"spread":true,"forwardsRefTo":"HTMLDivElement","filename":"/packages/mui-material/src/TextField/TextField.js","inheritance":{"component":"FormControl","pathname":"/material-ui/api/form-control/"},"demos":"<ul><li><a href=\\"/material-ui/react-autocomplete/\\">Autocomplete</a></li>\\n<li><a href=\\"/material-ui/react-text-field/\\">Text Field</a></li></ul>","cssComponent":false}'),r=o(824246);function l(e){var t=e.descriptions,o=e.pageContent;return(0,r.jsx)(n.Z,{descriptions:t,pageContent:o})}l.getInitialProps=function(){var e=o(774247);return{descriptions:(0,i.Z)(e),pageContent:a}}},506669:function(e,t,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/api/text-field",function(){return o(211940)}])},464982:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"The `TextField` is a convenience wrapper for the most common cases (80%).\\nIt cannot be all things to all people, otherwise the API would grow out of control.\\n\\n## Advanced Configuration\\n\\nIt\'s important to understand that the text field is a simple abstraction\\non top of the following components:\\n\\n- [FormControl](/material-ui/api/form-control/)\\n- [InputLabel](/material-ui/api/input-label/)\\n- [FilledInput](/material-ui/api/filled-input/)\\n- [OutlinedInput](/material-ui/api/outlined-input/)\\n- [Input](/material-ui/api/input/)\\n- [FormHelperText](/material-ui/api/form-helper-text/)\\n\\nIf you wish to alter the props applied to the `input` element, you can do so as follows:\\n\\n```jsx\\nconst inputProps = {\\n  step: 300,\\n};\\n\\nreturn <TextField id=\\"time\\" type=\\"time\\" inputProps={inputProps} />;\\n```\\n\\nFor advanced cases, please look at the source of TextField by clicking on the\\n\\"Edit this page\\" button above. Consider either:\\n\\n- using the upper case props for passing values directly to the components\\n- using the underlying components directly as shown in the demos","propDescriptions":{"autoComplete":"This prop helps users to fill forms faster, especially on mobile devices. The name can be confusing, as it&#39;s more like an autofill. You can learn more about it <a href=\\"https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\\">following the specification</a>.","autoFocus":"If <code>true</code>, the <code>input</code> element is focused during the first mount.","classes":"Sobrescreve ou extende os estilos aplicados para o componente. Veja a <a href=\\"#css\\">API CSS</a> abaixo para maiores detalhes.","color":"The color of the component. It supports both default and custom theme colors, which can be added as shown in the <a href=\\"https://mui.com/material-ui/customization/palette/#adding-new-colors\\">palette customization guide</a>.","defaultValue":"The default input value. Use when the component is not controlled.","disabled":"Se <code>true</code>, o componente est\xe1 desabilitado.","error":"If <code>true</code>, the label should be displayed in an error state.","FormHelperTextProps":"Props applied to the <a href=\\"/material-ui/api/form-helper-text/\\"><code>FormHelperText</code></a> element.","fullWidth":"If <code>true</code>, the input will take up the full width of its container.","helperText":"The helper text content.","id":"The id of the <code>input</code> element. Use this prop to make <code>label</code> and <code>helperText</code> accessible for screen readers.","InputLabelProps":"Props applied to the <a href=\\"/material-ui/api/input-label/\\"><code>InputLabel</code></a> element. Pointer events like <code>onClick</code> are enabled if and only if <code>shrink</code> is <code>true</code>.","inputProps":"<a href=\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes\\">Attributes</a> applied to the <code>input</code> element.","InputProps":"Props applied to the Input element. It will be a <a href=\\"/material-ui/api/filled-input/\\"><code>FilledInput</code></a>, <a href=\\"/material-ui/api/outlined-input/\\"><code>OutlinedInput</code></a> or <a href=\\"/material-ui/api/input/\\"><code>Input</code></a> component depending on the <code>variant</code> prop value.","inputRef":"Pass a ref to the <code>input</code> element.","label":"The label content.","margin":"If <code>dense</code> or <code>normal</code>, will adjust vertical spacing of this and contained components.","maxRows":"Maximum number of rows to display when multiline option is set to true.","minRows":"Minimum number of rows to display when multiline option is set to true.","multiline":"If <code>true</code>, a <code>textarea</code> element is rendered.instead of an input.","name":"Name attribute of the <code>input</code> element.","onChange":"Callback fired when the value is changed.<br><br><strong>Signature:</strong><br><code>function(event: object) =&gt; void</code><br><em>event:</em> The event source of the callback. You can pull out the new value by accessing <code>event.target.value</code> (string).","placeholder":"The short hint displayed in the <code>input</code> before the user enters a value.","required":"If <code>true</code>, the label is displayed as required and the <code>input</code> element is required.","rows":"Number of rows to display when multiline option is set to true.","select":"Render a <a href=\\"/material-ui/api/select/\\"><code>Select</code></a> element while passing the Input element to <code>Select</code> as <code>input</code> parameter. If this option is set you must pass the options of the select as children.","SelectProps":"Props applied to the <a href=\\"/material-ui/api/select/\\"><code>Select</code></a> element.","size":"The size of the autocomplete.","sx":"The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\\"/system/getting-started/the-sx-prop/\\">`sx` page</a> for more details.","type":"Type of the <code>input</code> element. It should be <a href=\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types\\">a valid HTML5 input type</a>.","value":"The value of the <code>input</code> element, required for a controlled component.","variant":"A variante a usar."},"classDescriptions":{"root":{"description":"Estilos aplicados ao elemento raiz."}}}')},837397:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"The `TextField` is a convenience wrapper for the most common cases (80%).\\nIt cannot be all things to all people, otherwise the API would grow out of control.\\n\\n## Advanced Configuration\\n\\nIt\'s important to understand that the text field is a simple abstraction\\non top of the following components:\\n\\n- [FormControl](/material-ui/api/form-control/)\\n- [InputLabel](/material-ui/api/input-label/)\\n- [FilledInput](/material-ui/api/filled-input/)\\n- [OutlinedInput](/material-ui/api/outlined-input/)\\n- [Input](/material-ui/api/input/)\\n- [FormHelperText](/material-ui/api/form-helper-text/)\\n\\nIf you wish to alter the props applied to the `input` element, you can do so as follows:\\n\\n```jsx\\nconst inputProps = {\\n  step: 300,\\n};\\n\\nreturn <TextField id=\\"time\\" type=\\"time\\" inputProps={inputProps} />;\\n```\\n\\nFor advanced cases, please look at the source of TextField by clicking on the\\n\\"Edit this page\\" button above. Consider either:\\n\\n- using the upper case props for passing values directly to the components\\n- using the underlying components directly as shown in the demos","propDescriptions":{"autoComplete":"This prop helps users to fill forms faster, especially on mobile devices. The name can be confusing, as it&#39;s more like an autofill. You can learn more about it <a href=\\"https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\\">following the specification</a>.","autoFocus":"If <code>true</code>, the <code>input</code> element is focused during the first mount.","classes":"Override or extend the styles applied to the component. See <a href=\\"#css\\">CSS API</a> below for more details.","color":"The color of the component. It supports both default and custom theme colors, which can be added as shown in the <a href=\\"https://mui.com/material-ui/customization/palette/#adding-new-colors\\">palette customization guide</a>.","defaultValue":"The default input value. Use when the component is not controlled.","disabled":"\u5982\u679c\u88ab\u8bbe\u7f6e\u4e3a <code>true</code>\uff0c\u90a3\u4e48\u8be5\u7ec4\u4ef6\u5c06\u4f1a\u88ab\u7981\u7528\u3002","error":"If <code>true</code>, the label should be displayed in an error state.","FormHelperTextProps":"Props applied to the <a href=\\"/material-ui/api/form-helper-text/\\"><code>FormHelperText</code></a> element.","fullWidth":"If <code>true</code>, the input will take up the full width of its container.","helperText":"The helper text content.","id":"The id of the <code>input</code> element. Use this prop to make <code>label</code> and <code>helperText</code> accessible for screen readers.","InputLabelProps":"Props applied to the <a href=\\"/material-ui/api/input-label/\\"><code>InputLabel</code></a> element. Pointer events like <code>onClick</code> are enabled if and only if <code>shrink</code> is <code>true</code>.","inputProps":"<a href=\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes\\">Attributes</a> applied to the <code>input</code> element.","InputProps":"Props applied to the Input element. It will be a <a href=\\"/material-ui/api/filled-input/\\"><code>FilledInput</code></a>, <a href=\\"/material-ui/api/outlined-input/\\"><code>OutlinedInput</code></a> or <a href=\\"/material-ui/api/input/\\"><code>Input</code></a> component depending on the <code>variant</code> prop value.","inputRef":"Pass a ref to the <code>input</code> element.","label":"The label content.","margin":"If <code>dense</code> or <code>normal</code>, will adjust vertical spacing of this and contained components.","maxRows":"Maximum number of rows to display when multiline option is set to true.","minRows":"Minimum number of rows to display when multiline option is set to true.","multiline":"If <code>true</code>, a <code>textarea</code> element is rendered.instead of an input.","name":"Name attribute of the <code>input</code> element.","onChange":"Callback fired when the value is changed.<br><br><strong>Signature:</strong><br><code>function(event: object) =&gt; void</code><br><em>event:</em> The event source of the callback. You can pull out the new value by accessing <code>event.target.value</code> (string).","placeholder":"The short hint displayed in the <code>input</code> before the user enters a value.","required":"If <code>true</code>, the label is displayed as required and the <code>input</code> element is required.","rows":"Number of rows to display when multiline option is set to true.","select":"Render a <a href=\\"/material-ui/api/select/\\"><code>Select</code></a> element while passing the Input element to <code>Select</code> as <code>input</code> parameter. If this option is set you must pass the options of the select as children.","SelectProps":"Props applied to the <a href=\\"/material-ui/api/select/\\"><code>Select</code></a> element.","size":"The size of the autocomplete.","sx":"The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\\"/system/getting-started/the-sx-prop/\\">`sx` page</a> for more details.","type":"Type of the <code>input</code> element. It should be <a href=\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types\\">a valid HTML5 input type</a>.","value":"The value of the <code>input</code> element, required for a controlled component.","variant":"The variant to use."},"classDescriptions":{"root":{"description":"Styles applied to the root element."}}}')},724128:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"The `TextField` is a convenience wrapper for the most common cases (80%).\\nIt cannot be all things to all people, otherwise the API would grow out of control.\\n\\n## Advanced Configuration\\n\\nIt\'s important to understand that the text field is a simple abstraction\\non top of the following components:\\n\\n- [FormControl](/material-ui/api/form-control/)\\n- [InputLabel](/material-ui/api/input-label/)\\n- [FilledInput](/material-ui/api/filled-input/)\\n- [OutlinedInput](/material-ui/api/outlined-input/)\\n- [Input](/material-ui/api/input/)\\n- [FormHelperText](/material-ui/api/form-helper-text/)\\n\\nIf you wish to alter the props applied to the `input` element, you can do so as follows:\\n\\n```jsx\\nconst inputProps = {\\n  step: 300,\\n};\\n\\nreturn <TextField id=\\"time\\" type=\\"time\\" inputProps={inputProps} />;\\n```\\n\\nFor advanced cases, please look at the source of TextField by clicking on the\\n\\"Edit this page\\" button above. Consider either:\\n\\n- using the upper case props for passing values directly to the components\\n- using the underlying components directly as shown in the demos","propDescriptions":{"autoComplete":"This prop helps users to fill forms faster, especially on mobile devices. The name can be confusing, as it&#39;s more like an autofill. You can learn more about it <a href=\\"https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\\">following the specification</a>.","autoFocus":"If <code>true</code>, the <code>input</code> element is focused during the first mount.","classes":"Override or extend the styles applied to the component. See <a href=\\"#css\\">CSS API</a> below for more details.","color":"The color of the component. It supports both default and custom theme colors, which can be added as shown in the <a href=\\"https://mui.com/material-ui/customization/palette/#adding-new-colors\\">palette customization guide</a>.","defaultValue":"The default value. Use when the component is not controlled.","disabled":"If <code>true</code>, the component is disabled.","error":"If <code>true</code>, the label is displayed in an error state.","FormHelperTextProps":"Props applied to the <a href=\\"/material-ui/api/form-helper-text/\\"><code>FormHelperText</code></a> element.","fullWidth":"If <code>true</code>, the input will take up the full width of its container.","helperText":"The helper text content.","id":"The id of the <code>input</code> element. Use this prop to make <code>label</code> and <code>helperText</code> accessible for screen readers.","InputLabelProps":"Props applied to the <a href=\\"/material-ui/api/input-label/\\"><code>InputLabel</code></a> element. Pointer events like <code>onClick</code> are enabled if and only if <code>shrink</code> is <code>true</code>.","inputProps":"<a href=\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes\\">Attributes</a> applied to the <code>input</code> element.","InputProps":"Props applied to the Input element. It will be a <a href=\\"/material-ui/api/filled-input/\\"><code>FilledInput</code></a>, <a href=\\"/material-ui/api/outlined-input/\\"><code>OutlinedInput</code></a> or <a href=\\"/material-ui/api/input/\\"><code>Input</code></a> component depending on the <code>variant</code> prop value.","inputRef":"Pass a ref to the <code>input</code> element.","label":"The label content.","margin":"If <code>dense</code> or <code>normal</code>, will adjust vertical spacing of this and contained components.","maxRows":"Maximum number of rows to display when multiline option is set to true.","minRows":"Minimum number of rows to display when multiline option is set to true.","multiline":"If <code>true</code>, a <code>textarea</code> element is rendered instead of an input.","name":"Name attribute of the <code>input</code> element.","onChange":"Callback fired when the value is changed.<br><br><strong>Signature:</strong><br><code>function(event: object) =&gt; void</code><br><em>event:</em> The event source of the callback. You can pull out the new value by accessing <code>event.target.value</code> (string).","placeholder":"The short hint displayed in the <code>input</code> before the user enters a value.","required":"If <code>true</code>, the label is displayed as required and the <code>input</code> element is required.","rows":"Number of rows to display when multiline option is set to true.","select":"Render a <a href=\\"/material-ui/api/select/\\"><code>Select</code></a> element while passing the Input element to <code>Select</code> as <code>input</code> parameter. If this option is set you must pass the options of the select as children.","SelectProps":"Props applied to the <a href=\\"/material-ui/api/select/\\"><code>Select</code></a> element.","size":"The size of the component.","sx":"The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\\"/system/getting-started/the-sx-prop/\\">`sx` page</a> for more details.","type":"Type of the <code>input</code> element. It should be <a href=\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types\\">a valid HTML5 input type</a>.","value":"The value of the <code>input</code> element, required for a controlled component.","variant":"The variant to use."},"classDescriptions":{"root":{"description":"Styles applied to the root element."}}}')}},function(e){e.O(0,[75760,31194,91642,35408,85992,59771,79125,93899,63978,54328,82744,20365,51990,37637,26035,8726,11486,10552,67414,47093,84445,42697,49774,92888,40179],(function(){return t=506669,e(e.s=t);var t}));var t=e.O();_N_E=t}]);